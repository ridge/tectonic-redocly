swagger: "2.0"
info:
  title: Data Center API
  description: An API for obtaining information on data centers.
  version: unstable
host: api.ridge.co
basePath: /compute/unstable
schemes:
- http
consumes:
- application/json
produces:
- application/json
paths:
  /orgs/{org}/data-centers:
    parameters:
    - name: org
      in: path
      description: The organization identifier
      required: true
      type: string
    get:
      operationId: listOrgDataCenters
      summary: List organization data centers
      description: List data centers available for the organization.
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/data_centers'
        400:
          description: Bad Request
          schema:
            type: string
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Not Found
          schema:
            type: string
  /orgs/{org}/projects/{project}/networks:
    parameters:
    - name: org
      in: path
      description: The organization identifier.
      required: true
      type: string
    - name: project
      in: path
      description: The project identifier.
      required: true
      type: string
    get:
      operationId: listNetworks
      summary: List Networks
      description: Returns a list of all networks in the specified project.
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/networks'
        400:
          description: Bad Request
          schema:
            type: string
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Not Found
          schema:
            type: string
    post:
      operationId: createNetwork
      summary: Create a Network
      description: Creates a new network in the specified project.
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/network_create'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/network'
        400:
          description: Bad Request
          schema:
            type: string
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Not Found
          schema:
            type: string
  /orgs/{org}/projects/{project}/networks/{network}:
    parameters:
    - name: org
      in: path
      description: The organization identifier.
      required: true
      type: string
    - name: project
      in: path
      description: The project identifier.
      required: true
      type: string
    - name: network
      in: path
      description: A unique identifier of a network.
      required: true
      type: string
    get:
      operationId: describeNetwork
      summary: Describe a Network
      description: Returns information about a specific network.
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/network'
        400:
          description: Bad Request
          schema:
            type: string
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Not Found
          schema:
            type: string
    patch:
      operationId: updateNetwork
      summary: Update a Network
      description: Update the network properties.
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/network_update'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/network'
        400:
          description: Bad Request
          schema:
            type: string
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Not Found
          schema:
            type: string
    delete:
      operationId: deleteNetwork
      summary: Delete a Network
      description: Deletes the selected network. Only empty networks can be deleted.
      responses:
        204:
          description: Success
        400:
          description: Bad Request
          schema:
            type: string
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Not Found
          schema:
            type: string
  /partners/{partner}/data-centers:
    parameters:
    - name: partner
      in: path
      description: The identifier of a partner.
      required: true
      type: string
    get:
      operationId: listPartnerDataCenters
      summary: List partner's data centers
      parameters:
      - name: location
        in: query
        description: The country codes (ISO-3166-1) or country subdivision codes (ISO-3166-2)
          in which the Data centers reside
        type: array
        items:
          type: string
      - name: quality
        in: query
        description: Specify a list of quality_id or quality_id=value to match only
          data centers satisfying the quality requirements.
        type: array
        items:
          type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/data_centers'
        400:
          description: Bad Request
          schema:
            type: string
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Not Found
          schema:
            type: string
  /partners/{partner}/data-centers/{data_center}:
    parameters:
    - name: partner
      in: path
      description: The identifier of a partner.
      required: true
      type: string
    - name: data_center
      in: path
      description: The identifier of a data center.
      required: true
      type: string
    get:
      operationId: describeDataCenter
      summary: Describe data center
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/data_center'
        400:
          description: Bad Request
          schema:
            type: string
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Not Found
          schema:
            type: string
  /partners/{partner}/data-centers/{data_center}/vm-catalog:
    parameters:
    - name: partner
      in: path
      description: The identifier of a partner.
      required: true
      type: string
    - name: data_center
      in: path
      description: The identifier of a data center.
      required: true
      type: string
    get:
      operationId: describeVMCatalog
      summary: Describe a data center's VM catalog.
      parameters:
      - name: quality
        in: query
        description: Specify a list of quality_id or quality_id=value to match only
          catalog items satisfying the quality requirements.
        type: array
        items:
          type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/vm_catalog'
        400:
          description: Bad Request
          schema:
            type: string
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Not Found
          schema:
            type: string
  /partners/{partner}/data-centers/{data_center}/vm-catalog/{vm_catalog_item}:
    parameters:
    - name: partner
      in: path
      description: The identifier of a partner.
      required: true
      type: string
    - name: data_center
      in: path
      description: The identifier of a data center.
      required: true
      type: string
    - name: vm_catalog_item
      in: path
      description: The unique identifier of a VM catalog item.
      required: true
      type: string
    get:
      operationId: describeVMCatalogItem
      summary: Describe a data center's VM catalog item.
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/vm_catalog_item'
        400:
          description: Bad Request
          schema:
            type: string
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Not Found
          schema:
            type: string
  /qualities:
    get:
      operationId: listQualities
      summary: List all qualities defined in the system.
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/qualities'
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
  /quantities:
    get:
      operationId: listQuantities
      summary: List all quantities defined in the system.
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/quantities'
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
  /status:
    get:
      operationId: status
      summary: Check API server status
      description: If the API server is ready to serve requests, the response HTTP
          code 204 is returned.
      responses:
        204:
          description: Success
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
definitions:
  area:
    type: object
    required:
    - country
    properties:
      country:
        description: The 2 letter country code according to ISO-3166-1
        type: string
      state_or_province:
        description: The country subdivision code according to ISO-3166-2
        type: string
  data_center:
    type: object
    required:
    - id
    - name
    - path
    - partner_id
    - partner_path
    - location
    - available
    - enabled
    - access_level
    - qualities
    - prices
    - default_kubernetes_master
    - supported_console_protocols
    properties:
      id:
        description: The unique identifier of the data center
        type: string
      name:
        description: A human-readable name
        type: string
        minLength: 1
        maxLength: 63
        pattern: ^[a-z]([-a-z0-9]*[a-z0-9])?$
        example: paris
      path:
        description: The path to the resource that includes all the parents
        type: string
        example: /partners/big-partner/data-centers/paris
      partner_id:
        description: The unique identifier of the partner who is offering this data
          center.
        type: string
      partner_path:
        description: The path to the partner resource.
        type: string
      location:
        $ref: '#/definitions/location'
      available:
        description: Indicates if this data center is currently available for use
        type: boolean
      enabled:
        description: Indicates is this data center is currently enabled
        type: boolean
      access_level:
        description: |
          Access level that is required to use the data center.
          public - data center is available to all of ridge users.
          clients - data center is only available to all clients of the partner owning the DC.
          private - data center is only available to clients that are explicitly authorized (regardless of their partner).
        type: string
        enum: [public, clients, private]
      qualities:
        $ref: '#/definitions/quality_set'
      persistent_storage:
        $ref: '#/definitions/quantity_range'
        description: The range of supported persistent volume sizes. Absent if the
          data center does not offer persistent storage.
      prices:
        $ref: '#/definitions/data_center_price_set'
        description: The prices in USD per hour for the data center resources.
      default_kubernetes_master:
        $ref: '#/definitions/kubernetes_master_node'
        description: Default configuration of Kubernetes master nodes in this data
          center.
      supported_console_protocols:
        description: Supported console protocols
        type: array
        items:
          type: string
          enum: [vnc, serial]
  data_center_price_set:
    description: A set of data center resource prices. The object maps resource identifiers
      to price.
    type: object
    additionalProperties:
      type: string
      format: usd-per-hour
    example:
      gateways: "0.12"
      load_balancers: "0.012"
      networks: "0.123"
      persistent_storage: "0.00123"
  data_centers:
    description: A list of data centers.
    type: object
    required:
    - items
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/data_center'
  kubernetes_master_node:
    description: Default configuration of Kubernetes master nodes in this data center.
    type: object
    required:
    - catalog_item_id
    - catalog_item_path
    - quantities
    properties:
      catalog_item_id:
        description: The catalog item unique identifier for Kubernetes master nodes.
        type: string
      catalog_item_path:
        description: The catalog item path for Kubernetes master nodes.
        type: string
      quantities:
        $ref: '#/definitions/quantity_set'
    example:
      catalog_item_id: rfzcfc
      catalog_item_path: /partners/medone/data-centers/tira/vm-catalog/@rfzcfc
      quantities:
        bandwidth: 100000000
        cpu_cores: 1
        instance_storage: 21474836480
        ram: 1073741824
  location:
    type: object
    required:
    - area
    - city
    - latitude
    - longitude
    - continent
    properties:
      area:
        $ref: '#/definitions/area'
      city:
        description: The city in which the data center is located
        type: string
        example: Portland
      latitude:
        description: The latitude in range (-90.0, 90.0)
        type: string
      longitude:
        description: The latitude in range (-180.0, 180.0)
        type: string
      continent:
        description: The continent in which the data center is located
        type: string
        enum: [africa, asia, europe, north-america, south-america, antarctica, oceania]
  network:
    type: object
    required:
    - spec
    - status
    properties:
      spec:
        $ref: '#/definitions/network_spec'
      status:
        $ref: '#/definitions/network_status'
    example:
      spec:
        data_center_id: n6wicf
        data_center_path: /partners/medone/data-centers/ptv
        display_name: Network One
        name: network1
      status:
        created_at: "2021-03-08T16:29:06.265Z"
        id: jizh77chbfcnyu7p79omf5rx5a
        nat_ips:
        - 1.2.3.4
        org_id: di86ihycue5875pb7d5ybfhn9r
        path: /orgs/test-org/projects/sandbox/networks/id68hiycue5875pb7d5ybfhn9r
        phase: running
        private_ip_range: 192.168.65.0/24
        project_id: g3ker86kt6mir8rbczwkyjotpe
        project_path: /orgs/test-org/projects/test-project
        updated_at: "2021-03-08T16:29:06.265Z"
  network_create:
    type: object
    required:
    - name
    properties:
      name:
        description: A user-readable name of the network.
        type: string
        minLength: 1
        maxLength: 63
        pattern: ^[a-z]([-a-z0-9]*[a-z0-9])?$
      display_name:
        description: The display name of the network.
        type: string
        maxLength: 512
      data_center_id:
        description: The ID of a data center to create the network in. Either this
          field or data_center_path is required.
        type: string
      data_center_path:
        description: The data center path to create the network in. Either this field
          or data_center_id is required.
        type: string
      disallowed_address_ranges:
        description: A list of address ranges in CIDR notation that the newly created
          network is not allowed to overlap
        type: array
        items:
          type: string
  network_issues:
    description: Network issues
    type: object
    properties:
      degraded:
        description: The network is running in a degraded mode. There might be a delay
          between issuing a command for controlling this network and receiving a response.
        type: boolean
      shortage:
        description: Indicates the network is not fully provisioned due to a shortage
          at the data center.
        type: boolean
      out_of_quota:
        description: Indicates the network is not fully provisioned due to quota limitation.
        type: boolean
  network_spec:
    type: object
    required:
    - name
    - data_center_id
    - data_center_path
    properties:
      name:
        description: A user-readable name of the network.
        type: string
        minLength: 1
        maxLength: 63
        pattern: ^[a-z]([-a-z0-9]*[a-z0-9])?$
      display_name:
        description: The display name of the network.
        type: string
        maxLength: 512
      data_center_id:
        description: The ID of a data center to run the containers.
        type: string
      data_center_path:
        description: The data center path to run the containers.
        type: string
        example: /partner/foo/data-center/bar
      disallowed_address_ranges:
        description: A list of address ranges in CIDR notation that the network is
          not allowed to overlap
        type: array
        items:
          type: string
  network_status:
    type: object
    required:
    - id
    - path
    - org_id
    - project_id
    - project_path
    - created_at
    - updated_at
    - phase
    properties:
      id:
        description: The unique ID of the network.
        type: string
      path:
        description: The path to the resource that includes all the parents
        type: string
        example: /orgs/my-org/projects/my-project/networks/my-network
      org_id:
        description: The unique identifier of the organization.
        type: string
      project_id:
        description: The unique identifier of the project.
        type: string
      project_path:
        description: The path to the project resource.
        type: string
      created_at:
        description: The time at which this network was created.
        type: string
        format: date-time
      updated_at:
        description: The time at which this network was last updated.
        type: string
        format: date-time
      phase:
        description: The life cycle phase of the network.
        type: string
        enum: [creating, running, terminating, terminated, failed]
      nat_ips:
        description: |
          The list of IPs that are used for outgoing NATed connections from instances in this network. Instances with public IPs may use either NATed or public IPs for outgoing gonnections, depending on the data center.
        type: array
        items:
          type: string
          format: ipv4
      private_ip_range:
        description: The private IPv4 range of the network, in CIDR format.
        type: string
      issues:
        $ref: '#/definitions/network_issues'
  network_update:
    type: object
    properties:
      name:
        description: A human-readable name of the network.
        type: string
        minLength: 1
        maxLength: 63
        pattern: ^[a-z]([-a-z0-9]*[a-z0-9])?$
      display_name:
        description: The display name of the network.
        type: string
        maxLength: 512
    example:
      display_name: Network Two
      name: network2
  networks:
    description: A list of networks.
    type: object
    required:
    - items
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/network'
  qualities:
    description: The list of all qualities defined in the system, organized in thematic
      sections
    type: array
    items:
      $ref: '#/definitions/quality_section'
  quality:
    description: A single quality defined in the system
    type: object
    required:
    - id
    - display_name
    properties:
      id:
        description: A unique identifier of the quality
        type: string
      display_name:
        description: The display name of the quality
        type: string
        maxLength: 512
      scope:
        description: Specifies the scope the quality applies to.
        type: string
        enum: [data-center, instance]
      values:
        description: If specified, the quality has values, with either bigger or smaller
          numbers considered preferable
        type: string
        enum: [more-is-better, less-is-better]
      unit:
        description: The optional measurement unit of the quality values
        type: string
  quality_section:
    description: A thematic section containing quality definitions
    type: object
    required:
    - display_name
    - qualities
    properties:
      display_name:
        description: The display name of the section
        type: string
        maxLength: 512
      qualities:
        description: The list of qualities in the section
        type: array
        items:
          $ref: '#/definitions/quality'
  quality_set:
    description: A set of provided qualities. The object maps quality identifiers
      to values. For qualities defined with no values, the value must be 1. See https://api.ridge.co/compute/unstable/qualities
      for possible properties.
    type: object
    additionalProperties:
      type: integer
  quantities:
    description: The list of all quantities defined in the system
    type: array
    items:
      $ref: '#/definitions/quantity'
  quantity:
    description: A single quantity defined in the system
    type: object
    required:
    - id
    - display_name
    - scope
    - pricing_unit
    properties:
      id:
        description: A unique identifier of the quantity
        type: string
      display_name:
        description: The display name of the quantity
        type: string
        maxLength: 512
      scope:
        description: Specifies the scope the quantity applies to.
        type: string
        enum: [order, instance, volume]
      unit:
        description: The optional measurement unit of the quantity values
        type: string
        enum: [bytes, bps]
      pricing_unit:
        description: The basic amount of the quantity for which prices are expressed
        type: integer
        format: int64
  quantity_range:
    description: A single quantity
    type: object
    required:
    - min
    - max
    properties:
      min:
        description: A minimum value of the quantity
        type: integer
        format: int64
      max:
        description: A maximum value of the quantity
        type: integer
        format: int64
      step:
        description: |
          A value change step.
          When step is present, the scale is linear. Allowed values are min, min + step, min + step*2, ... not exceeding max.
          When step is absent, the scale is powers-of-two. Allowed values are min, min*2, min*4, ... not exceeding max.
        type: integer
        format: int64
  quantity_range_set:
    description: A set of quantities. The object maps quantity identifiers to value
      ranges. See https://api.ridge.co/compute/unstable/quantities for possible properties.
    type: object
    additionalProperties:
      $ref: '#/definitions/quantity_range'
      type: object
  quantity_set:
    description: A set of quantities. The object maps quantity identifiers to values.
      See https://api.ridge.co/compute/unstable/quantities for possible properties.
    type: object
    additionalProperties:
      type: integer
      format: int64
  vm_catalog:
    type: array
    items:
      $ref: '#/definitions/vm_catalog_item'
  vm_catalog_item:
    type: object
    required:
    - id
    - path
    - qualities
    - quantities
    - prices
    properties:
      id:
        description: The unique identifier of a VM catalog item.
        type: string
      path:
        description: The path to the resource that includes all the parents
        type: string
        example: /partners/big-partner/data-center/boston/vm-catalog/@7g167ryep3fr8ejr4bxemxju4h
      qualities:
        $ref: '#/definitions/quality_set'
      quantities:
        $ref: '#/definitions/quantity_range_set'
        description: A set of VM catalog item ranges such as amount of cpu, ram, storage
      prices:
        $ref: '#/definitions/vm_price_set'
        description: The prices in USD per hour for a machine with these resources.
      description:
        description: Additional information about the catalog item.
        type: string
  vm_price_set:
    description: A set of VM catalog item prices. The object maps resource identifiers
      to price.
    type: object
    additionalProperties:
      type: string
      format: usd-per-hour
    example:
      cpu_cores: "0.12"
      instance_storage: "0.00123"
      instances: "0.123"
      ram: "0.012"
