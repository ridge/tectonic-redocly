swagger: "2.0"
info:
  version: v1alpha
  title: Ridge Kubernetes Service API
  description: An API for the Managed Kubernetes Service
basePath: /rks/v1alpha
host: api.ridge.co
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
tags:
  - name: Clusters
    description: Operations on Kubernetes clusters
  - name: Node Pools
    description: Operations on node pools
  - name: Access Tokens
    description: Operations on tokens that enable access to Kubernetes clusters
  - name: Kubernetes Versions
    description: The Kubernetes software versions
  - name: API Server Status
    description: An API for checking the server status
  - name: Nodes
    description: Operations on worker nodes of a Kubernetes cluster
  - name: Load Balancers
    description: The load balancers that serve Kubernetes services
  - name: Node Presets
    description: Pre-defined sets of node types
  - name: Volumes
    description: The persistent volumes of a Kubernetes cluster
# For Readme
x-explorer-enabled: false
x-samples-enabled: false
paths:
  /status:
    get:
      operationId: status
      summary: Check if API Server is Ready to Serve Requests
      description: If the API server is ready to serve requests, the response code 204 HTTP is returned.
      tags:
        - API Server Status
      responses:
        204:
          description: OK
        403:
          description: Forbidden
          schema:
            type: string
  /k8s-versions:
    get:
      operationId: listVersions
      summary: List Supported Kubernetes Versions
      description: Returns a list of the supported Kubernetes versions.
      tags:
        - Kubernetes Versions
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/versions'
  /node-presets:
    get:
      operationId: listNodePresets
      summary: List Node Presets
      description: Returns a list of the Kubernetes-node presets (suggested node sizes).
      tags:
        - Node Presets
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/node_presets'
  /orgs/{org}/projects/{project}/clusters:
    parameters:
      - name: org
        in: path
        description: The organization identifier
        required: true
        type: string
      - name: project
        in: path
        description: The project identifier
        required: true
        type: string
    get:
      operationId: listClusters
      summary: List the Kubernetes Clusters
      description: Returns a list of all Kubernetes clusters created in the project.
      tags:
        - Clusters
      responses:
        400:
          description: Bad request
          schema:
            type: string
        200:
          description: Success
          schema:
            $ref: '#/definitions/clusters'
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Resource not found
          schema:
            type: string
    post:
      operationId: createCluster
      summary: Create a Kubernetes Cluster
      description: Creates a new Kubernetes cluster in the specified project. When you create a new cluster, you must also specify properties for at least one node pool. See Additional Information after Body Parameters for details of qualities and quantities needed for Cluster and Node Pool creation.
      tags:
        - Clusters
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/cluster_create'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/cluster'
        400:
          description: Bad request parameter
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Resource not found
          schema:
            type: string
  /orgs/{org}/projects/{project}/clusters/{cluster}:
    parameters:
      - name: cluster
        description: The identifier of a cluster.
        in: path
        type: string
        required: true
      - name: project
        in: path
        description: The project identifier.
        required: true
        type: string
      - name: org
        in: path
        description: The organization identifier.
        required: true
        type: string
    get:
      operationId: describeCluster
      summary: Describe a Kubernetes Cluster
      description: Returns full details of the specified Kubernetes cluster.
      tags:
        - Clusters
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/cluster'
        400:
          description: Invalid request parameters
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Resource not found
          schema:
            type: string
    patch:
      operationId: updateCluster
      summary: Update Kubernetes Cluster Parameters
      description: Lets you update the cluster's display name, the desired version, or its whitelist.
      tags:
        - Clusters
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/cluster_update'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/cluster'
        400:
          description: Invalid request parameters
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Resource not found
          schema:
            type: string
    delete:
      operationId: deleteCluster
      summary: Delete a Cluster
      description: Deletes the selected cluster including all its related resources.
      tags:
        - Clusters
      responses:
        204:
          description: OK
        400:
          description: Invalid request parameters
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Resource not found
          schema:
            type: string
  /orgs/{org}/projects/{project}/clusters/{cluster}/node-pools:
    parameters:
      - name: cluster
        description: The identifier of a cluster.
        in: path
        type: string
        required: true
      - name: project
        in: path
        description: The project identifier.
        required: true
        type: string
      - name: org
        in: path
        description: The organization identifier.
        required: true
        type: string
    get:
      operationId: listClusterNodePools
      summary: List the Node Pools of a Kubernetes Cluster
      description: Returns a list of node pools created for the specified cluster.
      tags:
        - Node Pools
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/node_pools'
        400:
          description: Invalid request parameters
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Resource not found
          schema:
            type: string
    post:
      operationId: createClusterNodePool
      summary: Create a Node Pool for a Kubernetes Cluster
      description: Lets you create additional node pools for a cluster. For details of qualities and quantities used in Node Pool creation, see Additional Information below the body parameters.
      tags:
        - Node Pools
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/node_pool_create'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/node_pool'
        400:
          description: Bad request parameter
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Resource not found
          schema:
            type: string
  /orgs/{org}/projects/{project}/clusters/{cluster}/node-pools/{node_pool}:
    parameters:
      - name: cluster
        description: The identifier of a cluster.
        in: path
        type: string
        required: true
      - name: project
        in: path
        description: The project identifier.
        required: true
        type: string
      - name: org
        in: path
        description: The organization identifier.
        required: true
        type: string
      - name: node_pool
        in: path
        description: The identifier of a node pool in a cluster.
        required: true
        type: string
    get:
      operationId: describeClusterNodePool
      summary: Get Information About a Node Pool
      description: Returns all information about the specified node pool.
      tags:
        - Node Pools
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/node_pool'
        400:
          description: Invalid request parameters
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Resource not found
          schema:
            type: string
    delete:
      operationId: deleteClusterNodePool
      summary: Delete a Node Pool from a Cluster
      description: Deletes the specified node pool including all the resources within. Note that the system tries to maintain the desired amount of nodes. Therefore, deleting a node without reducing the desired amount of nodes will trigger the creation of a new node.
      tags:
        - Node Pools
      responses:
        204:
          description: OK
        400:
          description: Invalid request parameters
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Resource not found
          schema:
            type: string
    patch:
      operationId: updateClusterNodePool
      summary: Update Node Pool Parameters
      description: Lets you update the display_name and desired_node_count parameters for the specified node pool.
      tags:
        - Node Pools
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/node_pool_update'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/node_pool'
        400:
          description: Invalid request parameters
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Resource not found
          schema:
            type: string
  /orgs/{org}/projects/{project}/clusters/{cluster}/node-pools/{node_pool}/nodes:
    parameters:
      - name: node_pool
        description: The identifier of a node pool.
        in: path
        type: string
        required: true
      - name: cluster
        description: The identifier of a cluster.
        in: path
        type: string
        required: true
      - name: project
        in: path
        description: The project identifier.
        required: true
        type: string
      - name: org
        in: path
        description: The organization identifier.
        required: true
        type: string
    get:
      operationId: listClusterNodes
      summary: List the Worker Nodes of a Kubernetes Cluster
      description: Returns a list of the worker nodes of the specified Kubernetes cluster.
      tags:
        - Nodes
      parameters:
        - name: state
          description: Filter the nodes by specified states.
          in: query
          type: array
          items:
            type: string
          default: [starting, running, terminating, terminated]
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/nodes'
        400:
          description: Bad request parameter
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Resource not found
          schema:
            type: string
  /orgs/{org}/projects/{project}/clusters/{cluster}/node-pools/{node_pool}/nodes/{node}:
    parameters:
      - name: node_pool
        description: The identifier of a node pool.
        in: path
        type: string
        required: true
      - name: cluster
        description: The identifier of a cluster.
        in: path
        type: string
        required: true
      - name: project
        in: path
        description: The project identifier.
        required: true
        type: string
      - name: org
        in: path
        description: The organization identifier.
        required: true
        type: string
      - name: node
        in: path
        description: The unique identifier of a worker node in a cluster.
        required: true
        type: string
    get:
      operationId: describeClusterNode
      summary: Get Information About a Worker Node
      description: Returns all the information about the specified worker node.
      tags:
        - Nodes
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/node'
        400:
          description: Invalid request parameters
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Resource not found
          schema:
            type: string
    delete:
      operationId: deleteClusterNode
      summary: Shut Down a Worker Node in a Cluster
      description: Lets you shut down a specific worker node within a node pool.
      tags:
        - Nodes
      responses:
        204:
          description: OK
        400:
          description: Invalid request parameters
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Resource not found
          schema:
            type: string
  /orgs/{org}/projects/{project}/clusters/{cluster}/tokens:
    parameters:
      - name: cluster
        description: The identifier of a cluster.
        in: path
        type: string
        required: true
      - name: project
        in: path
        description: The project identifier.
        required: true
        type: string
      - name: org
        in: path
        description: The organization identifier.
        required: true
        type: string
    get:
      operationId: listClusterTokens
      summary: List the Access Tokens for a Kubernetes Cluster
      description: Returns a list of all the access tokens granted to members for cluster access.
      tags:
        - Access Tokens
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/tokens'
        400:
          description: Invalid request parameters
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Resource not found
          schema:
            type: string
    post:
      operationId: createClusterToken
      summary: Create a Token for a Kubernetes Cluster
      description: Lets you generate an access token for a member to access the cluster.
      tags:
        - Access Tokens
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/token_create'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/token_created'
        400:
          description: Bad request parameter
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Resource not found
          schema:
            type: string
  /orgs/{org}/projects/{project}/clusters/{cluster}/tokens/{token}:
    parameters:
      - name: token
        description: The token for a Kubernetes Cluster.
        in: path
        type: string
        required: true
      - name: cluster
        description: The identifier of a cluster.
        in: path
        type: string
        required: true
      - name: project
        in: path
        description: The project identifier.
        required: true
        type: string
      - name: org
        in: path
        description: The organization identifier.
        required: true
        type: string
    get:
      operationId: describeClusterToken
      summary: Get Information About a Cluster Token
      description: Returns all information about the specified access token.
      tags:
        - Access Tokens
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/token'
        400:
          description: Invalid request parameters
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Resource not found
          schema:
            type: string
    delete:
      operationId: deleteClusterToken
      summary: Delete a Cluster Token
      description: Deletes the specified access token.
      tags:
        - Access Tokens
      responses:
        204:
          description: OK
        400:
          description: Invalid request parameters
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Resource not found
          schema:
            type: string
  /orgs/{org}/projects/{project}/clusters/{cluster}/load-balancers:
    parameters:
      - name: cluster
        description: The identifier of a cluster.
        in: path
        type: string
        required: true
      - name: project
        in: path
        description: The project identifier.
        required: true
        type: string
      - name: org
        in: path
        description: The organization identifier.
        required: true
        type: string
    get:
      operationId: listClusterLBs
      summary: List Cluster's External Load Balancers
      description: Returns a list of the load balancers created in the data center when services of the 'LoadBalancer' type were created in the cluster.
      tags:
        - Load Balancers
      parameters:
        - name: state
          description: Filter the load balancers by specified states.
          in: query
          type: array
          items:
            type: string
          default: [starting, running, updating, terminating, terminated]
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/load_balancers'
        400:
          description: Invalid request parameters
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Resource not found
          schema:
            type: string
  /orgs/{org}/projects/{project}/clusters/{cluster}/volumes:
    parameters:
      - name: cluster
        description: The identifier of a cluster.
        in: path
        type: string
        required: true
      - name: project
        in: path
        description: The project identifier.
        required: true
        type: string
      - name: org
        in: path
        description: The organization identifier.
        required: true
        type: string
    get:
      operationId: listClusterVolumes
      summary: List Cluster's Persistent Volumes
      description: Returns a list of the Persistent Volumes used by the cluster.
      tags:
        - Volumes
      parameters:
        - name: state
          description: Filter the volumes by specified states.
          in: query
          type: array
          items:
            type: string
          default: [starting, running, updating, terminating, terminated]
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/volumes'
        400:
          description: Invalid request parameters
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Resource not found
          schema:
            type: string
definitions:
  node_pool:
    description: Node pools are a set of nodes (VMs), with a common configuration. They may have a set of Kubernetes labels or taints applied to them, which may be used during pod scheduling.
    type: object
    required:
      - id
      - name
      - org_id
      - project_id
      - cluster_id
      - path
      - created_at
      - desired_node_count
      - initial_kubernetes_labels
      - initial_taints
    properties:
      id:
        description: A system-defined unique ID of the node pool.
        type: string
      name:
        description: The human readable name for the node pool. The name is unique within the cluster.
        type: string
        minLength: 1
        maxLength: 63
        pattern: '^[a-z]([-a-z0-9]*[a-z0-9])?$'
        example: my-node-pool
      path:
        description: The path to the resource that includes all the parents.
        type: string
        example: /orgs/my-org/projects/my-project/clusters/my-cluster/node-pools/my-node-pool
      org_id:
        description: The unique identifier of the organization.
        type: string
      project_id:
        description: The unique identifier of the project.
        type: string
      cluster_id:
        description: The unique identifier of the Kubernetes cluster to which this node pool belongs.
        type: string
      created_at:
        description: The time at which this node pool was created.
        type: string
        format: date-time
      updated_at:
        description: The time at which this node pool was last updated.
        type: string
        format: date-time
      display_name:
        description: The display name of the node pool.
        type: string
        maxLength: 512
      desired_node_count:
        description: The desired number of worker nodes in the node pool.
        type: integer
      node_preset:
        description: The preset VM type of each node. Will only be provided if it was specified at creation.
        type: string
      quantities:
        $ref: '#/definitions/quantity_set'
      qualities:
        $ref: '#/definitions/quality_set'
      catalog_item_id:
        description: The chosen catalog item ID.
        type: string
      catalog_item_path:
        description: The chosen catalog item path.
        type: string
      node_counts:
        type: object
        properties:
          starting:
            description: The number of nodes in the provisioning stage.
            type: integer
          running:
            description: The number of nodes that are running.
            type: integer
          terminating:
            description: The number of nodes that are in the process of being terminated.
            type: integer
          shortage:
            description: The number of nodes that can't be provisioned at this time due to a shortage at the provider's level.
            type: integer
          queued:
            description: The number of nodes waiting to be allocated.
            type: integer
      initial_kubernetes_labels:
        description: The initial Kubernetes labels (key-value pairs) that will be applied to the node.
        $ref: '#/definitions/key_values'
      initial_taints:
        description: The initial Kubernetes taints that will be applied to the node.
        type: array
        items:
          description: A node taint of form "Key=Value:Effect". Effect should be one of k8s known taint effects.
          type: string
      shortage:
        description: Indicates the node pool is not fully provisioned due to a shortage at the data center level.
        type: boolean
      nonallocatable:
        description: Indicates the node pool is not fully provisioned because matching VM configurations could not be found
        type: boolean
      out_of_quota:
        description: Indicates the node pool is not fully provisioned due to quota exceeded
        type: boolean
    example:
      id: ibp566nxx5zx6sy59wpjz3xmya
      name: pool1
      path: "/orgs/test-org/projects/test/clusters/test-cluster/node-pools/pool1"
      org_id: di86ihycue5875pb7d5ybfhn9r
      project_id: fmgiyiqtajxoj59i4hgaubt4tc
      cluster_id: rozyaxyphmbiw5tbgq4sonooje
      created_at: '2020-12-16T13:08:48.563Z'
      updated_at: '2020-12-16T13:08:48.563Z'
      display_name: Pool 1
      desired_node_count: 1
      quantities:
        cpu_cores: 1
        instance_storage: 4294967296
        ram: 2147483648
      initial_kubernetes_labels:
        pool: pool1
      initial_taints:
      - workload_size=large:NoSchedule
      node_counts:
        running: 1
  node_pools:
    description: A list of node pools.
    type: object
    required:
      - items
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/node_pool'
  node:
    description: Information about a worker node.
    type: object
    required:
      - id
      - node_pool_id
      - path
      - created_at
      - state
    properties:
      id:
        description: A unique identifier for the worker node.
        type: string
      path:
        description: The path to the node that includes all the parents.
        type: string
        example: /orgs/my-org/projects/my-project/clusters/my-cluster/node-pools/my-node-pool/nodes/@cxh5jywfn7y5tdj76go8ijxh7a
      created_at:
        description: The time at which this node was created.
        type: string
        format: date-time
      node_pool_id:
        description: The unique identifier of the node pool to which this worker node belongs.
        type: string
      state:
        description: The state of the node.
        type: string
        enum:
          - starting
          - running
          - terminating
          - terminated
      ip_address:
        description: The IPv4 address of the worker node.
        type: string
        format: ipv4
      catalog_item_id:
        description: The chosen catalog item ID.
        type: string
      catalog_item_path:
        description: The path to the catalog item that includes all the parents.
        type: string
      quantities:
        description: The hardware configuration of the node.
        $ref: '#/definitions/quantity_set'
      volumes:
        description: The volumes that are currently attached to the node.
        type: array
        required:
          - items
        items:
          type: object
          required:
            - catalog_item_id
            - catalog_item_path
          properties:
            volume_id:
              description: The volume internal ID.
              type: string
            volume_path:
              description: The full path to the volume including all the parents.
              type: string
      shortage:
        description: Indicates the node is not provisioned due to a shortage at the provider's level
        type: boolean
      degraded:
        description: The node is running in a degraded mode. There might be a delay between issuing a command for controlling this node and receiving a response.
        type: boolean
    example:
      id: sgkt646mxg6nrsudt9h3cejf8y
      path: "/orgs/test-org/projects/test/clusters/test-cluster/node-pools/pool1/nodes/@sgkt646mxg6nrsudt9h3cejf8y"
      created_at: '2020-12-16T13:08:50.375Z'
      node_pool_id: ibp566nxx5zx6sy59wpjz3xmya
      state: running
      ip_address: 10.88.179.88
      catalog_item_id: rfzcfc
      catalog_item_path: "/partners/medone/data-centers/tira/vm-catalog/@rfzcfc"
      volumes:
  nodes:
    description: A list of worker nodes.
    type: object
    required:
      - items
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/node'
  cluster:
    description: A Kubernetes Cluster
    type: object
    required:
      - id
      - name
      - org_id
      - project_id
      - path
      - created_at
      - state
      - data_center_id
      - data_center_path
      - node_pools
      - highly_available
      - desired_version
      - current_version
      - whitelist
    properties:
      id:
        description: A system-defined unique ID for the Kubernetes cluster.
        type: string
      name:
        description: A human readable name for the cluster. The name must be unique within the project.
        type: string
        minLength: 1
        maxLength: 63
        pattern: '^[a-z]([-a-z0-9]*[a-z0-9])?$'
      path:
        description: The path to the resource that includes all the parents.
        type: string
        example: /orgs/my-org/projects/my-project/clusters/my-cluster
      project_id:
        description: The unique identifier of a project.
        type: string
      org_id:
        description: The unique identifier of the organization.
        type: string
      created_at:
        description: The time at which this cluster was created.
        type: string
        format: date-time
      updated_at:
        description: The time at which this cluster was last updated.
        type: string
        format: date-time
      display_name:
        description: The display name of the cluster.
        type: string
        maxLength: 512
      qualities:
        $ref: '#/definitions/quality_set'
      state:
        description: The current state of the cluster.
        type: string
        enum:
          - creating
          - configuring
          - running
          - upgrading
          - terminating
          - terminated
          - failed
      node_pools:
        description: The node pools in the cluster.
        $ref: '#/definitions/node_pools'
      data_center_id:
        description: The unique identifier of the data center in which this cluster is provisioned.
        type: string
        x-nullable: true
      data_center_path:
        description: The full path to the data center in which this cluster is provisioned, including all the parents.
        type: string
        example: /partner/foo/data-center/bar
        x-nullable: true
      cluster_endpoint:
        description: The address through which the Kubernetes cluster's API can be reached.
        type: string
      highly_available:
        description: Indicates whether the cluster has high availability.
        type: boolean
      desired_version:
        description: The desired Kubernetes cluster version.
        type: string
      current_version:
        description: The current Kubernetes cluster version. Might differ from the desired_version during an upgrade to the cluster.
        type: string
      whitelist:
        description: The desired list of whitelisted networks in CIDR format (AAA.BBB.CCC.DDD/NN) or single IP (AAA.BBB.CCC.DDD).
        type: array
        x-nullable: true
        items:
          description: A whitelisted network in CIDR format or single IP.
          type: string
      offline:
        description: Indicates if the cluster is currently offline (API server is unreachable).
        type: boolean
      degraded:
        description: The cluster is running in a degraded mode. There might be a delay between issuing a command for controlling this cluster and receiving a response.
        type: boolean
      out_of_quota:
        description: Indicates the cluster is not fully provisioned due to exceeded quota.
        type: boolean
      shortage:
        description: Indicates the cluster is not fully provisioned due to a shortage at the data center level.
        type: boolean
      nonallocatable:
        description: Indicates the cluster is not fully provisioned because VM configurations could not be found
        type: boolean
    example:
      id: rozyaxyphmbiw5tbgq4sonooje
      name: test-cluster
      path: "/orgs/test-org/projects/test/clusters/test-cluster"
      project_id: fmgiyiqtajxoj59i4hgaubt4tc
      org_id: di86ihycue5875pb7d5ybfhn9r
      created_at: '2020-12-16T13:08:48.563Z'
      updated_at: '2020-12-16T13:08:48.563Z'
      display_name: Test Cluster
      qualities:
        iso_27001: 1
      state: running
      node_pools:
        items:
        - id: ibp566nxx5zx6sy59wpjz3xmya
          name: pool1
          path: "/orgs/test-org/projects/test/clusters/test-cluster/node-pools/pool1"
          org_id: di86ihycue5875pb7d5ybfhn9r
          project_id: fmgiyiqtajxoj59i4hgaubt4tc
          cluster_id: rozyaxyphmbiw5tbgq4sonooje
          created_at: '2020-12-16T13:08:48.563Z'
          updated_at: '2020-12-16T13:08:48.563Z'
          display_name: Pool 1
          desired_node_count: 1
          quantities:
            cpu_cores: 1
            instance_storage: 4294967296
            ram: 2147483648
          initial_kubernetes_labels:
            pool: pool1
          initial_taints:
          - workload_size=large:NoSchedule
          node_counts:
            running: 1
      data_center_id: qk6pua
      data_center_path: "/partners/medone/data-centers/tira"
      cluster_endpoint: https://master.doatqj59rqh6xdkf1s1yy37rdh.public.sat.rdgto.com:6443
      highly_available: false
      desired_version: v1.17.6
      current_version: v1.17.6
      whitelist:
  clusters:
    description: A list of Kubernetes clusters.
    type: object
    required:
      - items
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/cluster'
  cluster_create:
    type: object
    required:
      - node_pools
    properties:
      name:
        description: A human readable name for the cluster. The name must be unique within the project.
        type: string
        minLength: 1
        maxLength: 63
        pattern: '^[a-z]([-a-z0-9]*[a-z0-9])?$'
      display_name:
        description: The display name for the cluster.
        type: string
        maxLength: 512
      node_pools:
        type: array
        description: The node pools that are created for this cluster. Additional node pools may be added separately.
        items:
          $ref: '#/definitions/node_pool_create'
      desired_locations:
        description: One or more desired locations for the cluster.
        type: array
        items:
          $ref: '#/definitions/location'
      data_center_id:
        description: The data center uniq ID in which the user wishes the cluster to run. This is mutually exclusive with desired_locations and qualities. Either data_center_id or data_center_path can be specified; if both are present, they must agree.
        type: string
      data_center_path:
        description: The data center path in which the user wishes the cluster to run. This is mutually exclusive with desired_locations and qualities. Either data_center_id or data_center_path can be specified; if both are present, they must agree.
        type: string
        example: /partner/foo/data-center/bar
      qualities:
        $ref: '#/definitions/quality_set'
      highly_available:
        description: Indicates whether the cluster has high availability. It might results in higher costs. By default, clusters are created with high availability.
        type: boolean
        x-nullable: true
      desired_version:
        description: The desired Kubernetes version of the cluster. If not specified, the default v1.17.6 will be chosen.
        type: string
      whitelist:
        $ref: "#/definitions/whitelist_update"
    example:
      node_pools:
      - desired_node_count: 1
        name: pool1
        display_name: Pool 1
        quantities:
          cpu_cores: 1
          instance_storage: 4294967296
          ram: 2147483648
        initial_kubernetes_labels:
          pool: pool1
        initial_taints:
        - workload_size=large:NoSchedule
      name: test-cluster
      display_name: Test Cluster
      desired_locations:
      - IL
      qualities:
        iso_27001: 1
      highly_available: false
      desired_version: v1.17.6
  cluster_update:
    type: object
    properties:
      display_name:
        description: The display name of the cluster.
        type: string
        x-nullable: true
        maxLength: 512
      desired_version:
        description: The desired Kubernetes version of the cluster. Updating this field will trigger an upgrade flow. Upgrade is a long operation where the cluster nodes are replaced. During the upgrade, any request to add or delete a node will be blocked.
        type: string
        x-nullable: true
      whitelist:
        $ref: "#/definitions/whitelist_update"
  node_pool_create:
    type: object
    required:
      - desired_node_count
    properties:
      name:
        description: A user readable name for the pool. The name must be unique within the project.
        type: string
        minLength: 1
        maxLength: 63
        pattern: '^[a-z]([-a-z0-9]*[a-z0-9])?$'
      display_name:
        description: The display name for the node pool.
        type: string
        maxLength: 512
      desired_node_count:
        description: The desired number of worker nodes in the node pool.
        type: integer
      node_preset:
        description: The preset VM specifications for the node. If you specify quantity values explicitly, these override those from the preset.
        type: string
      quantities:
        $ref: '#/definitions/quantity_set'
      qualities:
        $ref: '#/definitions/quality_set'
      catalog_item_id:
        description: The chosen catalog item ID, it is availble only when data_center_id and/or data_center_path is specified. catalog_item_id or catalog_item_path may be specified; if both are present, they must agree.
        type: string
      catalog_item_path:
        description: The chosen catalog item path, it is availble only when data_center_id and/or data_center_path is specified. catalog_item_id or catalog_item_path may be specified; if both are present, they must agree.
        type: string
        example: /partners/big-partner/data-center/boston/vm-catalog/@7g167ryep3fr8ejr4bxemxju4h
      initial_kubernetes_labels:
         $ref: '#/definitions/key_values'
      initial_taints:
        description: The initial Kubernetes taints that will be applied to the node.
        type: array
        items:
          description: A node taint of form "Key=Value:Effect". Effect should be one of k8s known taint effects.
          type: string
    example:
      desired_node_count: 1
      name: pool2
      display_name: Pool 2
      quantities:
        cpu_cores: 2
        instance_storage: 4294967296
        ram: 2147483648
      initial_kubernetes_labels:
        pool: pool2
      initial_taints:
      - workload_size=large:NoSchedule
  node_pool_update:
    type: object
    properties:
      display_name:
        description: The display name of the node pool.
        type: string
        maxLength: 512
        x-nullable: true
      desired_node_count:
        description: The desired number of worker nodes in the node pool.
        type: integer
        x-nullable: true
  key_values:
    type: object
    description: The initial Kubernetes labels (key-value pairs) that will be applied to the node.
    additionalProperties:
      type: string
  location:
    description: One or more locations. A location can refer to a country, a subdivision of a country, or a city.  A country is encoded using the Country codes (ISO-3166-1). A country subdivision as encoded as a <country code>-<subdivision code> (subdivision codes are defined in ISO-3166-2). A city is encoded as <country code>-<subdivision code>-<city name>, For example US-MA-Boston. In cases where there is no subdivision in the country it will be left blank. For example IL--TelAviv.
    type: string
    example: US-MA-Boston
  node_presets:
    description: A list of node presets.
    type: object
    required:
      - items
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/node_preset'
  node_preset:
    type: object
    required:
      - name
      - display_name
      - quantities
    properties:
      name:
        description: The human readable name of this preset.
        type: string
      display_name:
        description: The display name of this preset.
        type: string
      quantities:
        $ref: '#/definitions/quantity_set'
    example:
      name: xsmall
      display_name: X-Small
      quantities:
        cpu_cores: 1
        instance_storage: 10737418240
        ram: 1073741824
  tokens:
    description: A list of tokens.
    type: object
    required:
      - items
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/token'
  token:
    type: object
    required:
      - id
      - name
      - path
      - created_at
      - org_id
      - project_id
      - cluster_id
      - member_id
      - member_path
    properties:
      id:
        description: A system-defined unique ID of the token.
        type: string
      path:
        description: The path to the resource that includes all the parents.
        type: string
      name:
        description: The human readable name of this token.
        type: string
        minLength: 1
        maxLength: 63
        pattern: '^[a-z]([-a-z0-9]*[a-z0-9])?$'
      display_name:
        description: The display name of this token.
        type: string
      created_at:
        description: The time at which this token was created.
        type: string
        format: date-time
      org_id:
        description: The unique identifier of the organization.
        type: string
      project_id:
        description: The unique identifier of the project.
        type: string
      cluster_id:
        description: The unique identifier of the cluster.
        type: string
      member_id:
        description: The unique identifier of the Ridge member assigned to this token. The member ID will be used as the Kubernetes username.
        type: string
      member_path:
        description: The full path to the Ridge member assigned to this token. The member ID will be used as the Kubernetes username.
        type: string
    example:
      id: xxkymdd794f1me917t3aqa86iy
      path: "/orgs/test-org/projects/sandbox/clusters/cluster-1/tokens/sam=token"
      name: sam-token
      display_name: sam-token
      created_at: '2020-12-27T13:16:10.707Z'
      org_id: di86ihycue5875pb7d5ybfhn9r
      project_id: g3ker86kt6mir8rbczwkyjotpe
      cluster_id: hhbmufz5u41yokquakwbq3cbxr
      member_id: ysyighpz9buqsgi1xjgsjpazqc
      member_path: "/orgs/test-org/members/@ysyighpz9buqsgi1xjgsjpazqc"
  token_create:
    type: object
    properties:
      member_id:
        description: The unique identifier of the Ridge member assigned to this token. The member ID will be used as the Kubernetes username. Either member_id or member_path must be specified; if both are present, they must agree.
        type: string
      member_path:
        description: The full path to the Ridge member assigned to this token. The member ID will be used as the Kubernetes username. Either member_id or member_path must be specified; if both are present, they must agree.
        type: string
      name:
        description: The human readable name of this token.
        type: string
      display_name:
        description: The display name of this token.
        type: string
    example:
      id: kec9q64bu4813awu8x9p5ihr3r
      path: "/orgs/test-org/projects/test/clusters/test-cluster/tokens/token1"
      name: token1
      display_name: Token 1
      created_at: '2020-12-16T15:00:19.052Z'
      org_id: di86ihycue5875pb7d5ybfhn9r
      project_id: fmgiyiqtajxoj59i4hgaubt4tc
      cluster_id: rozyaxyphmbiw5tbgq4sonooje
      member_id: t1fdw9f44d9jj99psnt3bgyh7w
      member_path: "/orgs/test-org/members/my-bot"
  token_created:
    type: object
    required:
      - id
      - name
      - path
      - created_at
      - org_id
      - project_id
      - cluster_id
      - member_id
      - member_path
      - token
      - kubeconfig
    properties:
      id:
        description: A system-defined unique ID of the token.
        type: string
      name:
        description: The human readable name of this token.
        type: string
      display_name:
        description: The display name of this token.
        type: string
      path:
        description: The path to the resource that includes all the parents.
        type: string
      created_at:
        description: The time at which this token was created.
        type: string
        format: date-time
      org_id:
        description: The unique identifier of the organization.
        type: string
      project_id:
        description: The unique identifier of the project.
        type: string
      cluster_id:
        description: The unique identifier of the cluster.
        type: string
      member_id:
        description: The unique identifier of the Ridge member assigned to this token. The member ID will be used as the Kubernetes username.
        type: string
      member_path:
        description: The full path to the Ridge member assigned to this token. The member ID will be used as the Kubernetes username.
        type: string
      token:
        description: The authentication token.
        type: string
      kubeconfig:
        description: Kubeconfig file for the cluster and token.
        type: string
    example:
      id: kec9q64bu4813awu8x9p5ihr3r
      name: token1
      display_name: Token 1
      path: "/orgs/test-org/projects/test/clusters/test-cluster/tokens/token1"
      created_at: '2020-12-16T15:00:19.052Z'
      org_id: di86ihycue5875pb7d5ybfhn9r
      project_id: fmgiyiqtajxoj59i4hgaubt4tc
      cluster_id: rozyaxyphmbiw5tbgq4sonooje
      member_id: t1fdw9f44d9jj99psnt3bgyh7w
      member_path: "/orgs/test-org/members/my-bot"
      token: 36QSkC0ONemFigEQ3mcRlQ
      kubeconfig: '{"apiVersion":"v1","clusters":[{"cluster":{"certificate-authority-data":"LS0tLS1CRUdJTiBDRVJ...","server":"https://master.doatqj59rqh6xdkf1s1yy37rdh.public.sat.rdgto.com:6443"},"name":"test-org_test_test-cluster"}],"contexts":[{"context":{"cluster":"test-org_test_test-cluster","user":"token1"},"name":"test-org_test_test-cluster"}],"current-context":"test-org_test_test-cluster","kind":"Config","preferences":{},"users":[{"name":"token1","user":{"token":"36QSkC0ONemFigEQ3mcRlQ"}}]}'
  load_balancers:
    description: Defining a Kubernetes service of the "LoadBalancer" type creates a load balancer in the data center, external to the Cluster.
    type: object
    required:
      - items
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/load_balancer'
  load_balancer:
    type: object
    required:
      - id
      - path
      - org_id
      - project_id
      - cluster_id
      - state
      - kubernetes_namespace
      - kubernetes_service
      - created_at
    properties:
      id:
        description: A system-defined unique ID of the load balancer.
        type: string
      path:
        description: The path to the resource that includes all the parents.
        type: string
      org_id:
        description: The unique identifier of the organization.
        type: string
      project_id:
        description: The unique identifier of the project.
        type: string
      cluster_id:
        description: The unique identifier of the cluster.
        type: string
      kubernetes_service:
        description: The Kubernetes service that makes use of this load balancer.
        type: string
      kubernetes_namespace:
        description: The namespace of the service for which this load balancer was created.
        type: string
      created_at:
        description: The time at which this load balancer was created.
        type: string
        format: date-time
      state:
        description: The load balancer state.
        type: string
        enum:
          - starting
          - running
          - updating
          - terminating
          - terminated
      ip_address:
        description: The public IP address that is assigned to this load balancer.
        type: string
        format: ipv4
        x-nullable: true
      whitelist:
        description: List of whitelisted networks in CIDR format (AAA.BBB.CCC.DDD/NN). Field is missing if the whitelist is not present. Field is [] if whitelist present and empty (no networks allowed).
        type: array
        x-nullable: true
        items:
          type: string
      ports:
        type: array
        items:
          type: object
          required:
            - protocol
            - port
            - target_port
          properties:
            protocol:
              description: The IP protocol.
              type: string
              enum:
                - tcp
                - udp
            port:
              description: The protocol port on which the load balancer is listening.
              type: integer
              maximum: 65536
              minimum: 0
            target_port:
              description: The node port of the service.
              type: integer
              maximum: 65536
              minimum: 0
            target_ips:
              description: The IPs of the load balancer target VMs.
              type: array
              items:
                description: The IPv4 address of the target vm.
                type: string
                format: ipv4
      degraded:
        description: The load balancer is running in a degraded mode. There might be a delay between issuing a command for controlling this load balancer and a response.
        type: boolean
      out_of_quota:
        description: Indicates the load balancer is not provisioned due to exceeded quota.
        type: boolean
  versions:
    description: A list of Kubernetes versions.
    type: object
    required:
      - items
    properties:
      items:
        type: array
        items:
          type: string
    example:
      "items": [
          "v1.18.3",
          "v1.17.6"
      ]
  volumes:
    description: A list of persistent volumes.
    type: object
    required:
      - items
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/volume'
  volume:
    type: object
    required:
      - id
      - path
      - org_id
      - project_id
      - cluster_id
      - size
      - pvc_id
      - created_at
      - state
      - attachment_state
    properties:
      id:
        description: A system-defined unique ID of the volume.
        type: string
      path:
        description: The path to the resource that includes all the parents.
        type: string
      org_id:
        description: The unique identifier of the organization.
        type: string
      project_id:
        description: The unique identifier of the project.
        type: string
      cluster_id:
        description: The unique identifier of the cluster.
        type: string
      size:
        description: The size of the volume in bytes.
        type: integer
        minimum: 0
      pvc_id:
        description: The persistent volume claim that resulted in this volume.
        type: string
      created_at:
        description: The time at which this volume was created.
        type: string
        format: date-time
      state:
        description: The volume state.
        type: string
        enum:
          - starting
          - running
          - updating
          - terminating
          - terminated
      attachment_state:
        description: The volume attachment state.
        type: string
        enum:
          - attaching
          - attached
          - detaching
          - detached
      attached_node_id:
        description: The ID of the node that the volume is attached to.
        type: string
      attached_node_path:
        description: The full path of the node that the volume is attached to.
        type: string
      degraded:
        description: The volume is running in a degraded mode. There might be a delay between issuing a command for controlling this volume and a response.
        type: boolean
      out_of_quota:
        description: Indicates the volume is not provisioned due to exceeded quota.
        type: boolean
  quality_set:
    description: A set of required qualities. The object maps quality identifiers to values. For qualities defined with no values, the value must be 1. See https://ridge.readme.io/reference/qualities for possible properties.
    type: object
    additionalProperties:
      type: integer
  quantity_set:
    description: A set of quantities. The object maps quantity identifiers to values. See https://ridge.readme.io/reference/quantities for possible properties.
    type: object
    additionalProperties:
      type: integer
  whitelist_update:
    description: List of whitelisted networks in CIDR format (AAA.BBB.CCC.DDD/NN).
    items:
      description: A whitelisted network in CIDR format.
      type: string
    type: array
    x-tectonic-nullable: true
    x-go-type:
      type: WhitelistArray
      import:
        package: go.tectonic.network/moonstone/api/custom
