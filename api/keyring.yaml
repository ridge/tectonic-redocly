swagger: "2.0"
info:
  version: v1alpha
  title: Credentials API
  description: An API for managing credentials for external services
basePath: /keyring/v1alpha
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /status:
    get:
      operationId: status
      summary: Check if API is ready to serve requests. It is if 204 HTTP response code is returned.
      responses:
        204:
          description: OK
        403:
          description: Forbidden
          schema:
            type: string
  /orgs/{org}/projects/{project}/docker-registries:
    parameters:
      - name: org
        in: path
        description: The organization identifier
        required: true
        type: string
      - name: project
        in: path
        description: The project identifier
        required: true
        type: string
    get:
      operationId: listDockerCredentials
      description: List of external credentials for accessing a Docker registry.
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/docker_registries'
        400:
          description: Bad request
          schema:
            type: string
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Resource not found
          schema:
            type: string
    post:
      operationId: createDockerCredentials
      description: Create external credentials for accessing a docker registry
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/docker_create'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/docker_registry'
        400:
          description: Bad request
          schema:
            type: string
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Resource not found
          schema:
            type: string
  /orgs/{org}/projects/{project}/docker-registries/{docker_registry}:
    parameters:
    - name: org
      in: path
      description: The organization identifier
      required: true
      type: string
    - name: project
      in: path
      description: The project identifier
      required: true
      type: string
    - in: path
      name: docker_registry
      type: string
      required: true
      description: The identifier of the docker-registry's credentials
    get:
      operationId: describeDockerCredentials
      description: Describe details of a docker-registry's credentials
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/docker_registry'
        400:
          description: Bad request
          schema:
            type: string
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Resource not found
          schema:
            type: string
    delete:
      operationId: deleteDockerCredentials
      description: Delete a docker-registry's credentials
      responses:
        204:
          description: OK
        400:
          description: Bad request
          schema:
            type: string
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Resource not found
          schema:
            type: string
    patch:
      operationId: updateDockerCredentials
      description: Update a docker-registry's credentials
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/docker_update'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/docker_registry'
        400:
          description: Bad request
          schema:
            type: string
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Resource not found
          schema:
            type: string
  /orgs/{org}/projects/{project}/aws-keys:
    parameters:
      - name: org
        in: path
        description: The organization identifier
        required: true
        type: string
      - name: project
        in: path
        description: The project identifier
        required: true
        type: string
    get:
      operationId: listAWSAccessKeys
      description: List of AWS credentials
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/aws_keys'
        400:
          description: Bad request
          schema:
            type: string
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Resource not found
          schema:
            type: string
    post:
      operationId: createAWSAccessKey
      description: Create AWS credentials
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/aws_key_create'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/aws_key'
        400:
          description: Bad request
          schema:
            type: string
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Resource not found
          schema:
            type: string
  /orgs/{org}/projects/{project}/aws-keys/{aws_key}:
    parameters:
    - name: org
      in: path
      description: The organization identifier
      required: true
      type: string
    - name: project
      in: path
      description: The project identifier
      required: true
      type: string
    - in: path
      name: aws_key
      type: string
      required: true
      description: The identifier of the AWS credentials
    get:
      operationId: describeAWSAccessKey
      description: Describe details of an AWS credentials
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/aws_key'
        400:
          description: Bad request
          schema:
            type: string
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Resource not found
          schema:
            type: string
    delete:
      operationId: deleteAWSAccessKey
      description: Delete AWS credentials
      responses:
        204:
          description: OK
        400:
          description: Bad request
          schema:
            type: string
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Resource not found
          schema:
            type: string
    patch:
      operationId: updateAWSAccessKey
      description: Update AWS credentials
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/aws_key_update'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/aws_key'
        400:
          description: Bad request
          schema:
            type: string
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Resource not found
          schema:
            type: string
definitions:
  docker_registry:
    type: object
    required:
    - id
    - path
    - org_id
    - project_id
    - created_at
    - updated_at
    - registry_url
    - username
    properties:
      id:
        description: The unique ID of the docker-registry credential.
        type: string
      name:
        description: A user readable name of the docker-registry credential.
        type: string
        minLength: 1
        maxLength: 63
        pattern: '^[a-z]([-a-z0-9]*[a-z0-9])?$'
      path:
        description: The path to the resource that includes all the parents
        type: string
        example: /orgs/my-org/projects/my-project/docker-registries/my-registry
      org_id:
        description: The unique identifier of the organization.
        type: string
      project_id:
        description: The unique identifier of the project
        type: string
      created_at:
        description: The time at which this docker-registry credentials were created
        type: string
        format: date-time
      updated_at:
        description: The time at which this docker-registry credentials were last updated
        type: string
        format: date-time
      display_name:
        description: The display name of the docker-registry credential
        type: string
        maxLength: 512
      registry_url:
        description: The URL of the registry.
        type: string
        format: url
        example: https://hub.docker.com
      username:
        description: The username.
        type: string
  docker_create:
    type: object
    required:
    - registry_url
    - password
    - username
    properties:
      name:
        description: A user readable name of the docker-registry credential.
        type: string
        minLength: 1
        maxLength: 63
        pattern: '^[a-z]([-a-z0-9]*[a-z0-9])?$'
      display_name:
        description: The display name of the docker-registry credential
        type: string
        maxLength: 512
      registry_url:
        description: The URL of the registry.
        type: string
        format: url
        example: https://hub.docker.com
      username:
        description: The username.
        type: string
      password:
        description: The password.
        type: string
  docker_update:
    type: object
    properties:
      name:
        description: A user readable name of the docker-registry credential.
        type: string
        minLength: 1
        maxLength: 63
        pattern: '^[a-z]([-a-z0-9]*[a-z0-9])?$'
        x-nullable: true
      display_name:
        description: The display name of the docker-registry credential
        type: string
        maxLength: 512
        x-nullable: true
      username:
        description: The username.
        type: string
        x-nullable: true
      password:
        description: The password.
        type: string
        x-nullable: true
  docker_registries:
    description: a list of docker-registry credentials.
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/docker_registry'
  aws_key:
    type: object
    required:
    - id
    - path
    - org_id
    - project_id
    - created_at
    - updated_at
    - access_key_id
    - region
    properties:
      id:
        description: The unique ID of the external AWS credentials.
        type: string
      name:
        description: A user readable name of the external AWS credentials.
        type: string
        minLength: 1
        maxLength: 63
        pattern: '^[a-z]([-a-z0-9]*[a-z0-9])?$'
      path:
        description: The path to the resource that includes all the parents
        type: string
        example: /orgs/my-org/projects/my-project/aws-keys/my-key
      org_id:
        description: The unique identifier of the organization.
        type: string
      project_id:
        description: The unique identifier of the project
        type: string
      created_at:
        description: The time at which the external AWS credentials were created
        type: string
        format: date-time
      updated_at:
        description: The time at which the external AWS credentials were last updated
        type: string
        format: date-time
      display_name:
        description: The display name of the external AWS credentials
        type: string
        maxLength: 512
      region:
        description: The default AWS region.
        type: string
        example: us-west-2
      access_key_id:
        description: The AWS access key part of the credentials
        type: string
        maxLength: 256
  aws_key_create:
    type: object
    required:
    - access_key_id
    - access_key_secret
    - region
    properties:
      name:
        description: A user readable name of the external AWS credentials.
        type: string
        minLength: 1
        maxLength: 63
        pattern: '^[a-z]([-a-z0-9]*[a-z0-9])?$'
      display_name:
        description: display name of the external AWS credentials
        type: string
        maxLength: 512
      region:
        description: The AWS region.
        type: string
        example: us-west-2
      access_key_id:
        description: The AWS access key part of the credentials
        type: string
        minLength: 16
        maxLength: 128
      access_key_secret:
        description: The AWS secret access key part of the credentials
        type: string
  aws_key_update:
    type: object
    properties:
      name:
        description: A user readable name of the external AWS credentials.
        type: string
        minLength: 1
        maxLength: 63
        pattern: '^[a-z]([-a-z0-9]*[a-z0-9])?$'
        x-nullable: true
      display_name:
        description: The display name of the AWS credentials.
        type: string
        maxLength: 512
        x-nullable: true
      region:
        description: The AWS region.
        type: string
        example: us-west-2
        x-nullable: true
      access_key_id:
        description: The AWS access key part of the credentials
        type: string
        minLength: 16
        maxLength: 128
        x-nullable: true
      access_key_secret:
        description: The AWS secret access key part of the credentials
        type: string
        x-nullable: true
  aws_keys:
    description: A list of AWS credentials.
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/aws_key'
