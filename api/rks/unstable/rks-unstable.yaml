swagger: "2.0"
info:
  title: Ridge Kubernetes Service API
  description: An API for the Managed Kubernetes Service
  version: unstable
host: api.ridge.co
basePath: /rks/unstable
schemes:
- https
consumes:
- application/json
produces:
- application/json
paths:
  /k8s-versions:
    get:
      operationId: listVersions
      summary: List Supported Kubernetes Versions
      description: Returns a list of the supported Kubernetes versions, in descending
        order.
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/versions'
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
      tags:
      - Kubernetes Versions
  /orgs/{org}/projects/{project}/clusters:
    parameters:
    - name: org
      in: path
      description: The organization identifier
      required: true
      type: string
    - name: project
      in: path
      description: The project identifier
      required: true
      type: string
    get:
      operationId: listClusters
      summary: List the Kubernetes Clusters
      description: Returns a list of all Kubernetes clusters created in the project.
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/clusters'
        400:
          description: Bad Request
          schema:
            type: string
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Not Found
          schema:
            type: string
      tags:
      - Clusters
    post:
      operationId: createCluster
      summary: Create a Kubernetes Cluster
      description: Creates a new Kubernetes cluster in the specified project. When
        you create a new cluster, you must also specify properties for at least one
        node pool. See Additional Information after Body Parameters for details of
        qualities and quantities needed for Cluster and Node Pool creation.
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/cluster_create'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/cluster'
        400:
          description: Bad Request
          schema:
            type: string
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Not Found
          schema:
            type: string
      tags:
      - Clusters
  /orgs/{org}/projects/{project}/clusters/{cluster}:
    parameters:
    - name: org
      in: path
      description: The organization identifier.
      required: true
      type: string
    - name: project
      in: path
      description: The project identifier.
      required: true
      type: string
    - name: cluster
      in: path
      description: The identifier of a cluster.
      required: true
      type: string
    get:
      operationId: describeCluster
      summary: Describe a Kubernetes Cluster
      description: Returns full details of the specified Kubernetes cluster.
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/cluster'
        400:
          description: Bad Request
          schema:
            type: string
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Not Found
          schema:
            type: string
      tags:
      - Clusters
    patch:
      operationId: updateCluster
      summary: Update Kubernetes Cluster Parameters
      description: Lets you update the cluster's properties.
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/cluster_update'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/cluster'
        400:
          description: Bad Request
          schema:
            type: string
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Not Found
          schema:
            type: string
      tags:
      - Clusters
    delete:
      operationId: deleteCluster
      summary: Delete a Cluster
      description: Deletes the selected cluster including all its related resources.
      responses:
        204:
          description: Success
        400:
          description: Bad Request
          schema:
            type: string
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Not Found
          schema:
            type: string
      tags:
      - Clusters
  /orgs/{org}/projects/{project}/clusters/{cluster}/load-balancers:
    parameters:
    - name: org
      in: path
      description: The organization identifier.
      required: true
      type: string
    - name: project
      in: path
      description: The project identifier.
      required: true
      type: string
    - name: cluster
      in: path
      description: The identifier of a cluster.
      required: true
      type: string
    get:
      operationId: listClusterLBs
      summary: List Cluster's External Load Balancers
      description: Returns a list of the load balancers created in the data center
        when services of the 'LoadBalancer' type were created in the cluster.
      parameters:
      - name: phase
        in: query
        description: Filter the load balancers by specified life cycle phases.
        type: array
        items:
          type: string
        default: [starting, running, updating, terminating, terminated]
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/load_balancers'
        400:
          description: Bad Request
          schema:
            type: string
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Not Found
          schema:
            type: string
      tags:
      - Load Balancers
  /orgs/{org}/projects/{project}/clusters/{cluster}/node-pools:
    parameters:
    - name: org
      in: path
      description: The organization identifier.
      required: true
      type: string
    - name: project
      in: path
      description: The project identifier.
      required: true
      type: string
    - name: cluster
      in: path
      description: The identifier of a cluster.
      required: true
      type: string
    get:
      operationId: listClusterNodePools
      summary: List the Node Pools of a Kubernetes Cluster
      description: Returns a list of node pools created for the specified cluster.
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/node_pools'
        400:
          description: Bad Request
          schema:
            type: string
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Not Found
          schema:
            type: string
      tags:
      - Node Pools
    post:
      operationId: createClusterNodePool
      summary: Create a Node Pool for a Kubernetes Cluster
      description: Lets you create additional node pools for a cluster. For details
        of qualities and quantities used in Node Pool creation, see Additional Information
        below the body parameters.
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/node_pool_create'
      - name: X-Ridge-Request-ID
        in: header
        description: Client-generated request ID for idempotency.
        type: string
        maxLength: 64
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/node_pool'
        400:
          description: Bad Request
          schema:
            type: string
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Not Found
          schema:
            type: string
      tags:
      - Node Pools
  /orgs/{org}/projects/{project}/clusters/{cluster}/node-pools/{node_pool}:
    parameters:
    - name: org
      in: path
      description: The organization identifier.
      required: true
      type: string
    - name: project
      in: path
      description: The project identifier.
      required: true
      type: string
    - name: cluster
      in: path
      description: The identifier of a cluster.
      required: true
      type: string
    - name: node_pool
      in: path
      description: The identifier of a node pool in a cluster.
      required: true
      type: string
    get:
      operationId: describeClusterNodePool
      summary: Get Information About a Node Pool
      description: Returns all information about the specified node pool.
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/node_pool'
        400:
          description: Bad Request
          schema:
            type: string
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Not Found
          schema:
            type: string
      tags:
      - Node Pools
    patch:
      operationId: updateClusterNodePool
      summary: Update Node Pool Parameters
      description: Lets you update node pool's properties.
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/node_pool_update'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/node_pool'
        400:
          description: Bad Request
          schema:
            type: string
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Not Found
          schema:
            type: string
      tags:
      - Node Pools
    delete:
      operationId: deleteClusterNodePool
      summary: Delete a Node Pool from a Cluster
      description: Deletes the specified node pool including all the resources within.
        Note that the system tries to maintain the requested amount of nodes. Therefore,
        deleting a node without reducing the desired amount of nodes will trigger
        the creation of a new node.
      responses:
        204:
          description: Success
        400:
          description: Bad Request
          schema:
            type: string
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Not Found
          schema:
            type: string
      tags:
      - Node Pools
  /orgs/{org}/projects/{project}/clusters/{cluster}/node-pools/{node_pool}/nodes:
    parameters:
    - name: org
      in: path
      description: The organization identifier.
      required: true
      type: string
    - name: project
      in: path
      description: The project identifier.
      required: true
      type: string
    - name: cluster
      in: path
      description: The identifier of a cluster.
      required: true
      type: string
    - name: node_pool
      in: path
      description: The identifier of a node pool.
      required: true
      type: string
    get:
      operationId: listClusterNodes
      summary: List the Worker Nodes of a Kubernetes Cluster
      description: Returns a list of the worker nodes of the specified Kubernetes
        cluster.
      parameters:
      - name: phase
        in: query
        description: Filter the nodes by specified life cycle phases.
        type: array
        items:
          type: string
        default: [starting, running, terminating, terminated]
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/nodes'
        400:
          description: Bad Request
          schema:
            type: string
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Not Found
          schema:
            type: string
      tags:
      - Nodes
  /orgs/{org}/projects/{project}/clusters/{cluster}/node-pools/{node_pool}/nodes/{node}:
    parameters:
    - name: org
      in: path
      description: The organization identifier.
      required: true
      type: string
    - name: project
      in: path
      description: The project identifier.
      required: true
      type: string
    - name: cluster
      in: path
      description: The identifier of a cluster.
      required: true
      type: string
    - name: node_pool
      in: path
      description: The identifier of a node pool.
      required: true
      type: string
    - name: node
      in: path
      description: The unique identifier of a worker node in a cluster.
      required: true
      type: string
    get:
      operationId: describeClusterNode
      summary: Get Information About a Worker Node
      description: Returns all the information about the specified worker node.
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/node'
        400:
          description: Bad Request
          schema:
            type: string
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Not Found
          schema:
            type: string
      tags:
      - Nodes
    delete:
      operationId: deleteClusterNode
      summary: Shut Down a Worker Node in a Cluster
      description: Lets you shut down a specific worker node within a node pool.
      responses:
        204:
          description: Success
        400:
          description: Bad Request
          schema:
            type: string
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Not Found
          schema:
            type: string
      tags:
      - Nodes
  /orgs/{org}/projects/{project}/clusters/{cluster}/tokens:
    parameters:
    - name: org
      in: path
      description: The organization identifier.
      required: true
      type: string
    - name: project
      in: path
      description: The project identifier.
      required: true
      type: string
    - name: cluster
      in: path
      description: The identifier of a cluster.
      required: true
      type: string
    get:
      operationId: listClusterTokens
      summary: List the Access Tokens for a Kubernetes Cluster
      description: Returns a list of all the access tokens granted to members for
        cluster access.
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/tokens'
        400:
          description: Bad Request
          schema:
            type: string
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Not Found
          schema:
            type: string
      tags:
      - Access Tokens
    post:
      operationId: createClusterToken
      summary: Create a Token for a Kubernetes Cluster
      description: Lets you generate an access token for a member to access the cluster.
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/token_create'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/token_created'
        400:
          description: Bad Request
          schema:
            type: string
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Not Found
          schema:
            type: string
      tags:
      - Access Tokens
  /orgs/{org}/projects/{project}/clusters/{cluster}/tokens/{token}:
    parameters:
    - name: org
      in: path
      description: The organization identifier.
      required: true
      type: string
    - name: project
      in: path
      description: The project identifier.
      required: true
      type: string
    - name: cluster
      in: path
      description: The identifier of a cluster.
      required: true
      type: string
    - name: token
      in: path
      description: The token for a Kubernetes Cluster.
      required: true
      type: string
    get:
      operationId: describeClusterToken
      summary: Get Information About a Cluster Token
      description: Returns all information about the specified access token.
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/token'
        400:
          description: Bad Request
          schema:
            type: string
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Not Found
          schema:
            type: string
      tags:
      - Access Tokens
    patch:
      operationId: updateClusterToken
      summary: Update Cluster Token Parameters
      description: Lets you update token's properties.
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/token_update'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/token'
        400:
          description: Bad Request
          schema:
            type: string
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Not Found
          schema:
            type: string
      tags:
      - Access Tokens
    delete:
      operationId: deleteClusterToken
      summary: Delete a Cluster Token
      description: Deletes the specified access token.
      responses:
        204:
          description: Success
        400:
          description: Bad Request
          schema:
            type: string
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Not Found
          schema:
            type: string
      tags:
      - Access Tokens
  /orgs/{org}/projects/{project}/clusters/{cluster}/volumes:
    parameters:
    - name: org
      in: path
      description: The organization identifier.
      required: true
      type: string
    - name: project
      in: path
      description: The project identifier.
      required: true
      type: string
    - name: cluster
      in: path
      description: The identifier of a cluster.
      required: true
      type: string
    get:
      operationId: listClusterVolumes
      summary: List Cluster's Persistent Volumes
      description: Returns a list of the Persistent Volumes used by the cluster.
      parameters:
      - name: phase
        in: query
        description: Filter the volumes by specified life cycle phases.
        type: array
        items:
          type: string
        default: [starting, running, updating, terminating, terminated]
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/volumes'
        400:
          description: Bad Request
          schema:
            type: string
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Not Found
          schema:
            type: string
      tags:
      - Volumes
  /orgs/{org}/projects/{project}/clusters/{cluster}/vpns:
    parameters:
    - name: org
      in: path
      description: The organization identifier.
      required: true
      type: string
    - name: project
      in: path
      description: The project identifier.
      required: true
      type: string
    - name: cluster
      in: path
      description: The identifier of a cluster.
      required: true
      type: string
    get:
      operationId: listVPNs
      summary: List the VPNs for a Kubernetes Cluster
      description: Returns a list of all the VPNs of the cluster
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/vpns'
        400:
          description: Bad Request
          schema:
            type: string
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Not Found
          schema:
            type: string
      tags:
      - VPN
    post:
      operationId: createVPN
      summary: Create a VPN for a Kubernetes Cluster
      description: Lets you create a VPN to connect to the cluster.
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/vpn_create'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/vpn_created'
        400:
          description: Bad Request
          schema:
            type: string
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Not Found
          schema:
            type: string
      tags:
      - VPN
  /orgs/{org}/projects/{project}/clusters/{cluster}/vpns/{vpn}:
    parameters:
    - name: org
      in: path
      description: The organization identifier.
      required: true
      type: string
    - name: project
      in: path
      description: The project identifier.
      required: true
      type: string
    - name: cluster
      in: path
      description: The identifier of a cluster.
      required: true
      type: string
    - name: vpn
      in: path
      description: The identifier of a VPN.
      required: true
      type: string
    get:
      operationId: describeVPN
      summary: Get Information About a VPN
      description: Returns all information about the specified VPN.
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/vpn'
        400:
          description: Bad Request
          schema:
            type: string
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Not Found
          schema:
            type: string
      tags:
      - VPN
    patch:
      operationId: updateVPN
      summary: Update VPN Parameters
      description: Lets you update parameters of VPN
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/vpn_update'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/vpn'
        400:
          description: Bad Request
          schema:
            type: string
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Not Found
          schema:
            type: string
      tags:
      - VPN
    delete:
      operationId: deleteVPN
      summary: Delete a VPN
      description: Deletes the specified VPN.
      responses:
        204:
          description: Success
        400:
          description: Bad Request
          schema:
            type: string
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
        404:
          description: Not Found
          schema:
            type: string
      tags:
      - VPN
  /status:
    get:
      operationId: status
      summary: Check if API Server is Ready to Serve Requests
      description: If the API server is ready to serve requests, the response code
        204 HTTP is returned.
      responses:
        204:
          description: Success
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Forbidden
          schema:
            type: string
      tags:
      - internal
definitions:
  aws_role:
    description: The IAM role that will grant the cluster permissions (using temporary
      credentials) to access AWS services.
    type: object
    required:
    - role_arn
    - aws_access_key_id
    properties:
      role_arn:
        description: The unique identifier of the role in AWS.
        type: string
      aws_access_key_id:
        description: The unique identifier of the AWS key that should be used to create
          temporary credentials for the cluster.
        type: string
  cluster:
    description: A Kubernetes Cluster
    type: object
    required:
    - spec
    - status
    - node_pools
    properties:
      spec:
        $ref: '#/definitions/cluster_spec'
      status:
        $ref: '#/definitions/cluster_status'
      node_pools:
        $ref: '#/definitions/node_pools'
        description: The node pools in the cluster.
    example:
      node_pools:
        items:
        - spec:
            autoscaling: true
            catalog_item_id: ggif1zusxtp6
            catalog_item_path: /partners/medone/data-centers/sjc01/vm-catalog/@ggif1zusxtp6
            cpu_cores: 1
            display_name: pool 1
            initial_kubernetes_labels:
              pool: pool1
            initial_taints:
            - workload_size=large:NoSchedule
            instance_storage: 4294967296
            max_nodes: 5
            min_nodes: 1
            name: pool1
            quantities: null
            ram: 2147483648
          status:
            cluster_id: fkwsnunegang7ttrocjyax7ghe
            cluster_path: /orgs/test-org/projects/test-project/clusters/harpoon-existing-cluster
            created_at: "2021-03-25T16:27:26.081329853Z"
            id: iqfh374f97gbm9nacio3nnke9h
            node_counts:
              queued: 0
              running: 1
              shortage: 0
              starting: 0
              terminating: 0
            org_id: di86ihycue5875pb7d5ybfhn9r
            path: /orgs/test-org/projects/test-project/clusters/harpoon-existing-cluster/node-pools/p1
            project_id: g3ker86kt6mir8rbczwkyjotpe
            updated_at: "2021-03-30T14:52:33.005472793Z"
      spec:
        api_server_whitelist:
        - 40.0.0.0/8
        - 41.0.0.0/8
        autoscaling_scale_down_delay: 600
        display_name: Test Cluster
        highly_available: false
        locations:
        - IL
        master_quantities:
          cpu_cores: 2
          instance_storage: 10737418240
          ram: 4294967296
        name: test-cluster
        qualities:
          iso_27001: 1
        version: v1.17.6
      status:
        cluster_endpoint: https://master.mk587p1hihjghcp4ar4yu1igty.public.sat.rdgto.com:6443
        created_at: "2021-03-25T16:27:26.081203669Z"
        data_center_id: ggif1z
        data_center_path: /partners/medone/data-centers/sjc01
        id: fkwsnunegang7ttrocjyax7ghe
        org_id: di86ihycue5875pb7d5ybfhn9r
        path: /orgs/test-org/projects/test-project/clusters/test-cluster
        phase: running
        project_id: g3ker86kt6mir8rbczwkyjotpe
        project_path: /orgs/test-org/projects/test-project
        updated_at: "2021-03-25T16:27:26.081203669Z"
        version: v1.17.6
  cluster_create:
    type: object
    required:
    - name
    - node_pools
    properties:
      name:
        description: A human readable name for the cluster. The name is unique within
          the project.
        type: string
        minLength: 1
        maxLength: 63
        pattern: ^[a-z]([-a-z0-9]*[a-z0-9])?$
      display_name:
        description: The display name of the cluster.
        type: string
        maxLength: 512
      version:
        description: The requested Kubernetes cluster version.
        type: string
      network_id:
        description: The ID of a network for the cluster. Either this field or network_path
          is required.
        type: string
      network_path:
        description: The network path for the cluster. Either this field or network_id
          is required.
        type: string
      highly_available:
        description: Indicates whether to request the highly-available cluster.
        type: boolean
        default: true
      master_quantities: {$ref: '#/definitions/quantity_set', description: The minimum
          hardware configuration of the master nodes.}
      api_server_whitelist:
        description: The list of whitelisted networks for Kubernetes API server in
          CIDR format (AAA.BBB.CCC.DDD/NN) or single IP (AAA.BBB.CCC.DDD).
        type: array
        items:
          description: A whitelisted network in CIDR format or single IP.
          type: string
      aws_role:
        $ref: '#/definitions/aws_role'
      autoscaling_scale_down_delay:
        description: For how long, in seconds, a node pool is not scaled down after
          being scaled up
        type: integer
        default: 600
        minimum: 0
      node_pools:
        description: The node pools that are created for this cluster. Additional
          node pools may be added separately.
        type: array
        items:
          $ref: '#/definitions/node_pool_create'
    example:
      api_server_whitelist:
      - 40.0.0.0/8
      - 41.0.0.0/8
      display_name: Test Cluster
      highly_available: false
      locations:
      - IL
      master_quantities:
        cpu_cores: 2
        instance_storage: 10737418240
        ram: 4294967296
      name: test-cluster
      node_pools:
      - autoscaling: true
        display_name: Pool 1
        initial_kubernetes_labels:
          pool: pool1
        initial_taints:
        - workload_size=large:NoSchedule
        max_nodes: 5
        min_nodes: 1
        name: pool1
        quantities:
          cpu_cores: 1
          instance_storage: 4294967296
          ram: 2147483648
      qualities:
        iso_27001: 1
      version: v1.17.6
  cluster_issues:
    description: Cluster issues
    type: object
    properties:
      offline:
        description: Indicates if the cluster is currently offline (API server is
          unreachable).
        type: boolean
      degraded:
        description: The cluster is running in a degraded mode. There might be a delay
          between issuing a command for controlling this cluster and receiving a response.
        type: boolean
      out_of_quota:
        description: Indicates the cluster is not fully provisioned due to exceeded
          quota.
        type: boolean
      shortage:
        description: Indicates the cluster is not fully provisioned due to a shortage
          at the data center level.
        type: boolean
      nonallocatable:
        description: Indicates the cluster is not fully provisioned because VM configurations
          could not be found
        type: boolean
  cluster_spec:
    type: object
    required:
    - name
    - highly_available
    - autoscaling_scale_down_delay
    - version
    - network_id
    - network_path
    properties:
      name:
        description: A human readable name for the cluster. The name is unique within
          the project.
        type: string
        minLength: 1
        maxLength: 63
        pattern: ^[a-z]([-a-z0-9]*[a-z0-9])?$
      display_name:
        description: The display name of the cluster.
        type: string
        maxLength: 512
      autoscaling_scale_down_delay:
        description: For how long, in seconds, a node pool is not scaled down after
          being scaled up
        type: integer
        minimum: 0
      version:
        description: The requested Kubernetes cluster version.
        type: string
      locations:
        description: Requested locations for the cluster.
        type: array
        items:
          description: One or more locations. A location can refer to a country, a
            subdivision of a country, or a city.  A country is encoded using the Country
            codes (ISO-3166-1). A country subdivision as encoded as a <country code>-<subdivision
            code> (subdivision codes are defined in ISO-3166-2). A city is encoded
            as <country code>-<subdivision code>-<city name>, For example US-MA-Boston.
            In cases where there is no subdivision in the country it will be left
            blank. For example IL--TelAviv.
          type: string
          example: US-MA-Boston
      network_id:
        description: The ID of a network for the cluster.
        type: string
      network_path:
        description: The network path for the cluster.
        type: string
      data_center_id:
        description: Requested data center ID for the cluster.
        type: string
      data_center_path:
        description: Requested data center resource path for the cluster.
        type: string
        example: /partner/foo/data-center/bar
      highly_available:
        description: Indicates whether the cluster has high availability.
        type: boolean
      master_quantities:
        $ref: '#/definitions/quantity_set'
        description: The minimum hardware configuration of the master nodes.
      api_server_whitelist:
        description: The list of whitelisted networks for Kubernetes API server in
          CIDR format (AAA.BBB.CCC.DDD/NN) or single IP (AAA.BBB.CCC.DDD).
        type: array
        items:
          description: A whitelisted network in CIDR format or single IP.
          type: string
      aws_role:
        $ref: '#/definitions/aws_role'
  cluster_status:
    type: object
    required:
    - id
    - path
    - org_id
    - project_id
    - project_path
    - created_at
    - phase
    - version
    properties:
      id:
        description: A system-defined unique ID for the Kubernetes cluster.
        type: string
      path:
        description: The path to the resource that includes all the parents.
        type: string
        example: /orgs/test-org/projects/test-project/clusters/test-cluster
      project_id:
        description: The unique identifier of a project.
        type: string
      project_path:
        description: The path to the project resource.
        type: string
      org_id:
        description: The unique identifier of the organization.
        type: string
      created_at:
        description: The time at which this cluster was created.
        type: string
        format: date-time
      updated_at:
        description: The time at which this cluster was last updated.
        type: string
        format: date-time
      data_center_id:
        description: Data center ID selected for the cluster.
        type: string
      data_center_path:
        description: Data center resource path selected for the cluster.
        type: string
        example: /partner/foo/data-center/bar
      phase:
        description: The current life cycle phase of the cluster.
        type: string
        enum: [creating, configuring, running, upgrading, terminating, terminated,
          failed]
      upgrade_progress:
        description: The upgrade progress percentage. Only present if `phase` is `upgrading`.
        type: integer
        minimum: 0
        maximum: 100
      cluster_endpoint:
        description: The address through which the Kubernetes cluster's API can be
          reached.
        type: string
      version:
        description: The current Kubernetes cluster version. Might differ from the
          requested version during an upgrade to the cluster.
        type: string
      issues:
        $ref: '#/definitions/cluster_issues'
    example:
      node_pools:
        items:
        - spec:
            autoscaling: true
            display_name: Pool 1
            initial_kubernetes_labels:
              pool: pool1
            initial_taints:
            - workload_size=large:NoSchedule
            max_nodes: 5
            min_nodes: 1
            name: pool1
            quantities:
              cpu_cores: 1
              instance_storage: 4294967296
              ram: 2147483648
          status:
            cluster_id: rozyaxyphmbiw5tbgq4sonooje
            created_at: "2020-12-16T13:08:48.563Z"
            id: ibp566nxx5zx6sy59wpjz3xmya
            node_counts:
              running: 1
            org_id: di86ihycue5875pb7d5ybfhn9r
            path: /orgs/test-org/projects/test-project/clusters/test-cluster/node-pools/pool1
            project_id: fmgiyiqtajxoj59i4hgaubt4tc
            updated_at: "2020-12-16T13:08:48.563Z"
      spec:
        api_server_whitelist:
        - 40.0.0.0/8
        - 41.0.0.0/8
        display_name: Test Cluster
        highly_available: false
        name: test-cluster
        qualities:
          iso_27001: 1
        version: v1.17.6
      status:
        cluster_endpoint: https://master.doatqj59rqh6xdkf1s1yy37rdh.public.sat.rdgto.com:6443
        created_at: "2020-12-16T13:08:48.563Z"
        data_center_id: qk6pua
        data_center_path: /partners/medone/data-centers/tira
        id: rozyaxyphmbiw5tbgq4sonooje
        org_id: di86ihycue5875pb7d5ybfhn9r
        path: /orgs/test-org/projects/test-project/clusters/test-cluster
        phase: running
        project_id: fmgiyiqtajxoj59i4hgaubt4tc
        updated_at: "2020-12-16T13:08:48.563Z"
        version: v1.17.6
  cluster_update:
    type: object
    properties:
      display_name:
        description: The display name of the cluster.
        type: string
        maxLength: 512
      version:
        description: The requested Kubernetes version of the cluster. Updating this
          field will trigger an upgrade flow. Upgrade is a long operation where the
          cluster nodes are replaced. During the upgrade, any request to add or delete
          a node will be blocked.
        type: string
      api_server_whitelist:
        description: List of whitelisted networks for Kubernetes API server in CIDR
          format (AAA.BBB.CCC.DDD/NN).
        type: array
        items:
          description: A whitelisted network in CIDR format.
          type: string
      master_quantities:
        $ref: '#/definitions/quantity_set'
        description: The minimum hardware configuration of the master nodes.
      aws_role:
        $ref: '#/definitions/aws_role'
        x-nullable: true
      autoscaling_scale_down_delay:
        description: For how long, in seconds, a node pool is not scaled down after
          being scaled up
        type: integer
        minimum: 0
    example:
      api_server_whitelist:
      - 40.0.0.0/8
      - 41.0.0.0/8
      autoscaling_scale_down_delay: 600
      display_name: Test Cluster
      master_quantities:
        cpu_cores: 2
        instance_storage: 10737418240
        ram: 4294967296
      name: test-cluster
      version: v1.17.6
  clusters:
    description: A list of Kubernetes clusters.
    type: object
    required:
    - items
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/cluster'
  load_balancer:
    type: object
    required:
    - id
    - path
    - org_id
    - project_id
    - cluster_id
    - phase
    - kubernetes_namespace
    - kubernetes_service
    - created_at
    - whitelist
    properties:
      id:
        description: A system-defined unique ID of the load balancer.
        type: string
      path:
        description: The path to the resource that includes all the parents.
        type: string
      org_id:
        description: The unique identifier of the organization.
        type: string
      project_id:
        description: The unique identifier of the project.
        type: string
      cluster_id:
        description: The unique identifier of the cluster.
        type: string
      kubernetes_service:
        description: The Kubernetes service that makes use of this load balancer.
        type: string
      kubernetes_namespace:
        description: The namespace of the service for which this load balancer was
          created.
        type: string
      created_at:
        description: The time at which this load balancer was created.
        type: string
        format: date-time
      phase:
        description: The load balancer life cycle phase.
        type: string
        enum: [starting, running, updating, terminating, terminated]
      ip_address:
        description: The public IP address that is assigned to this load balancer.
        type: string
        format: ipv4
      whitelist:
        description: List of whitelisted networks in CIDR format (AAA.BBB.CCC.DDD/NN).
        type: array
        items:
          type: string
      ports:
        type: array
        items:
          $ref: '#/definitions/load_balancer_port'
      issues:
        $ref: '#/definitions/load_balancer_issues'
    example:
      cluster_id: fkwsnunegang7ttrocjyax7ghe
      created_at: "2021-12-05T12:35:47.282743807Z"
      id: a76gnw5tyrnrt43dkmt15id14r
      ip_address: 107.6.88.149
      kubernetes_namespace: default
      kubernetes_service: my-wordpress
      org_id: di86ihycue5875pb7d5ybfhn9r
      path: /orgs/test-org/projects/test-project/clusters/test-cluster/load-balancers/my-wordpress
      phase: running
      ports:
      - port: 80
        protocol: tcp
        target_nodes:
        - checked_at: "2021-12-05T12:35:53.842442003Z"
          id: rfxoxxsgu7d3mypdyq4cqgafta
          ip: 172.30.52.19
          up: true
        target_port: 30600
      - port: 443
        protocol: tcp
        target_nodes:
        - checked_at: "2021-12-05T12:35:53.842442003Z"
          id: rfxoxxsgu7d3mypdyq4cqgafta
          ip: 172.30.52.19
          up: true
        target_port: 30831
      project_id: g3ker86kt6mir8rbczwkyjotpe
      whitelist:
      - 0.0.0.0/0
  load_balancer_issues:
    description: Load Balancer issues
    type: object
    properties:
      degraded:
        description: The load balancer is running in a degraded mode. There might
          be a delay between issuing a command for controlling this load balancer
          and a response.
        type: boolean
      out_of_quota:
        description: Indicates the load balancer is not provisioned due to exceeded
          quota.
        type: boolean
  load_balancer_port:
    type: object
    required:
    - protocol
    - port
    - target_port
    - target_nodes
    properties:
      protocol:
        description: The IP protocol.
        type: string
        enum: [tcp, udp]
      port:
        description: The protocol port on which the load balancer is listening.
        type: integer
        minimum: 0
        maximum: 65536
      target_port:
        description: The node port of the service.
        type: integer
        minimum: 0
        maximum: 65536
      target_nodes:
        description: The load balancer target nodes.
        type: array
        items:
          $ref: '#/definitions/target_node'
  load_balancers:
    description: Defining a Kubernetes service of the "LoadBalancer" type creates
      a load balancer in the data center, external to the Cluster.
    type: object
    required:
    - items
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/load_balancer'
  node:
    description: Information about a worker node.
    type: object
    required:
    - id
    - node_pool_id
    - path
    - created_at
    - phase
    - quantities
    properties:
      id:
        description: A unique identifier for the worker node.
        type: string
      path:
        description: The path to the node that includes all the parents.
        type: string
        example: /orgs/test-org/projects/test-project/clusters/test-cluster/node-pools/my-node-pool/nodes/@cxh5jywfn7y5tdj76go8ijxh7a
      created_at:
        description: The time at which this node was created.
        type: string
        format: date-time
      node_pool_id:
        description: The unique identifier of the node pool to which this worker node
          belongs.
        type: string
      phase:
        description: The life cycle phase of the node.
        type: string
        enum: [starting, running, terminating, terminated]
      ip_address:
        description: The IPv4 address of the worker node.
        type: string
        format: ipv4
      catalog_item_id:
        description: The chosen catalog item ID.
        type: string
      catalog_item_path:
        description: The path to the catalog item that includes all the parents.
        type: string
      quantities:
        $ref: '#/definitions/quantity_set'
        description: The hardware configuration of the node.
      volumes:
        description: The volumes that are currently attached to the node.
        type: array
        items:
          $ref: '#/definitions/node_volume'
      issues:
        $ref: '#/definitions/node_issues'
    example:
      catalog_item_id: rfzcfc
      catalog_item_path: /partners/medone/data-centers/tira/vm-catalog/@rfzcfc
      created_at: "2020-12-16T13:08:50.375Z"
      id: sgkt646mxg6nrsudt9h3cejf8y
      ip_address: 10.88.179.88
      node_pool_id: ibp566nxx5zx6sy59wpjz3xmya
      path: /orgs/test-org/projects/test-project/clusters/test-cluster/node-pools/pool1/nodes/@sgkt646mxg6nrsudt9h3cejf8y
      phase: running
      quantities:
        bandwidth: 100000000
        cpu_cores: 1
        instance_storage: 21474836480
        ram: 1073741824
      volumes: null
  node_counts:
    type: object
    required:
    - starting
    - running
    - terminating
    - shortage
    - queued
    properties:
      starting:
        description: The number of nodes in the provisioning stage.
        type: integer
      running:
        description: The number of nodes that are running.
        type: integer
      terminating:
        description: The number of nodes that are in the process of being terminated.
        type: integer
      shortage:
        description: The number of nodes that can't be provisioned at this time due
          to a shortage at the provider's level.
        type: integer
      queued:
        description: The number of nodes waiting to be allocated.
        type: integer
  node_issues:
    description: Node issues
    type: object
    properties:
      shortage:
        description: Indicates the node is not provisioned due to a shortage at the
          provider's level
        type: boolean
      degraded:
        description: The node is running in a degraded mode. There might be a delay
          between issuing a command for controlling this node and receiving a response.
        type: boolean
  node_pool:
    description: Node pools are a set of nodes (VMs), with a common configuration.
      They may have a set of Kubernetes labels or taints applied to them, which may
      be used during pod scheduling.
    type: object
    required:
    - spec
    - status
    properties:
      spec:
        $ref: '#/definitions/node_pool_spec'
      status:
        $ref: '#/definitions/node_pool_status'
    example:
      spec:
        autoscaling: true
        display_name: Pool 1
        initial_kubernetes_labels:
          pool: pool1
        initial_taints:
        - workload_size=large:NoSchedule
        max_nodes: 5
        min_nodes: 1
        name: pool1
        quantities:
          cpu_cores: 1
          instance_storage: 4294967296
          ram: 2147483648
      status:
        cluster_id: rozyaxyphmbiw5tbgq4sonooje
        created_at: "2020-12-16T13:08:48.563Z"
        id: ibp566nxx5zx6sy59wpjz3xmya
        node_counts:
          running: 1
        org_id: di86ihycue5875pb7d5ybfhn9r
        path: /orgs/test-org/projects/test-project/clusters/test-cluster/node-pools/pool1
        project_id: fmgiyiqtajxoj59i4hgaubt4tc
        updated_at: "2020-12-16T13:08:48.563Z"
  node_pool_create:
    type: object
    required:
    - name
    - min_nodes
    properties:
      name:
        description: A human-readable name for the node pool. The name has to be unique
          within the cluster.
        type: string
        minLength: 1
        maxLength: 63
        pattern: ^[a-z]([-a-z0-9]*[a-z0-9])?$
        example: pool-large
      display_name:
        description: A display name for the node pool.
        type: string
        maxLength: 512
      autoscaling:
        description: If true, nodes are created and deleted within the bounds of min_node
          and max_nodes automatically according to the actual load on them. If false,
          nodes are created to maintain at least min_nodes, but never deleted automatically.
        type: boolean
        default: false
      min_nodes: {description: Minimum number of nodes in the node pool., type: integer,
        minimum: 0}
      max_nodes:
        description: Maximum number of nodes in the node pool. If autoscaling is false,
          this setting does not apply.
        type: integer
        minimum: 0
      initial_node_count:
        description: The initial number of worker nodes in the node pool.
        type: integer
        minimum: 0
      quantities:
        $ref: '#/definitions/quantity_set'
      qualities:
        $ref: '#/definitions/quality_set'
      initial_kubernetes_labels:
        description: The initial Kubernetes labels (key-value pairs) that will be
          applied to the created nodes.
        type: object
        additionalProperties:
          type: string
      initial_taints:
        description: The initial Kubernetes taints that will be applied to the created
          nodes.
        type: array
        items:
          description: A node taint of form "Key=Value:Effect". Effect should be one
            of k8s known taint effects.
          type: string
      catalog_item_id:
        description: VM catalog item ID to use for nodes. If both catalog_item_id
          and catalog_item_path are specified, they must match.
        type: string
      catalog_item_path:
        description: VM catalog item ID to use for nodes. If both catalog_item_id
          and catalog_item_path are specified, they must match.
        type: string
    example:
      autoscaling: true
      display_name: Pool 1
      initial_kubernetes_labels:
        pool: pool1
      initial_taints:
      - workload_size=large:NoSchedule
      max_nodes: 5
      min_nodes: 1
      name: pool1
      quantities:
        cpu_cores: 1
        instance_storage: 4294967296
        ram: 2147483648
  node_pool_issues:
    description: Node Pool issues
    type: object
    properties:
      shortage:
        description: Indicates the node pool is not fully provisioned due to a shortage
          at the data center level.
        type: boolean
      nonallocatable:
        description: Indicates the node pool is not fully provisioned because matching
          VM configurations could not be found
        type: boolean
      out_of_quota:
        description: Indicates the node pool is not fully provisioned due to quota
          exceeded
        type: boolean
  node_pool_spec:
    type: object
    required:
    - name
    - autoscaling
    - min_nodes
    - max_nodes
    properties:
      name:
        description: The human-readable name for the node pool. The name is unique
          within the cluster.
        type: string
        minLength: 1
        maxLength: 63
        pattern: ^[a-z]([-a-z0-9]*[a-z0-9])?$
        example: my-node-pool
      display_name:
        description: The display name of the node pool.
        type: string
        maxLength: 512
      autoscaling:
        description: If true, nodes are created and deleted within the bounds of min_node
          and max_nodes automatically according to the actual load on them. If false,
          nodes are created to maintain at least min_nodes, but never deleted automatically.
        type: boolean
        default: false
      min_nodes: {description: Minimum number of nodes in the node pool., type: integer,
        minimum: 0}
      max_nodes:
        description: Maximum number of nodes in the node pool. If autoscaling is false,
          this setting does not apply.
        type: integer
        minimum: 0
      quantities:
        $ref: '#/definitions/quantity_set'
      qualities:
        $ref: '#/definitions/quality_set'
      initial_kubernetes_labels:
        description: The initial Kubernetes labels (key-value pairs) that will be
          applied to the created nodes.
        type: object
        additionalProperties:
          type: string
      initial_taints:
        description: The initial Kubernetes taints that will be applied to the created
          nodes.
        type: array
        items:
          description: A node taint of form "Key=Value:Effect". Effect should be one
            of k8s known taint effects.
          type: string
      catalog_item_id:
        description: VM catalog item ID to be used for nodes.
        type: string
      catalog_item_path:
        description: VM catalog item path to be used for nodes.
        type: string
  node_pool_status:
    type: object
    required:
    - id
    - path
    - org_id
    - project_id
    - cluster_id
    - cluster_path
    - created_at
    properties:
      id:
        description: A system-defined unique ID of the node pool.
        type: string
      path:
        description: The path to the resource that includes all the parents.
        type: string
        example: /orgs/test-org/projects/test-project/clusters/test-cluster/node-pools/my-node-pool
      org_id:
        description: The unique identifier of the organization.
        type: string
      project_id:
        description: The unique identifier of the project.
        type: string
      cluster_id:
        description: The unique identifier of the Kubernetes cluster to which this
          node pool belongs.
        type: string
      cluster_path:
        description: The path to the cluster resource.
        type: string
      created_at:
        description: The time at which this node pool was created.
        type: string
        format: date-time
      updated_at:
        description: The time at which this node pool was last updated.
        type: string
        format: date-time
      node_counts:
        $ref: '#/definitions/node_counts'
      issues:
        $ref: '#/definitions/node_pool_issues'
  node_pool_update:
    type: object
    properties:
      display_name:
        description: The display name of the node pool.
        type: string
        maxLength: 512
      autoscaling:
        description: If true, nodes are created and deleted within the bounds of min_node
          and max_nodes automatically according to the actual load on them. If false,
          nodes are created to maintain at least min_nodes, but never deleted automatically.
        type: boolean
        default: false
      min_nodes: {description: Minimum number of nodes in the node pool., type: integer,
        minimum: 0}
      max_nodes:
        description: Maximum number of nodes in the node pool. If autoscaling is false,
          this setting does not apply.
        type: integer
        minimum: 0
      initial_kubernetes_labels:
        description: The initial Kubernetes labels (key-value pairs) that will be
          applied to new nodes. Changes will not be applied to existing nodes.
        type: object
        additionalProperties:
          type: string
      initial_taints:
        description: The initial Kubernetes taints that will be applied to new nodes.
          Changes will not be applied to existing nodes.
        type: array
        items:
          description: A node taint of form "Key=Value:Effect". Effect should be one
            of k8s known taint effects.
          type: string
    example:
      autoscaling: true
      display_name: Pool 1
      initial_taints:
      - workload_size=large:NoSchedule
      max_nodes: 5
      min_nodes: 1
  node_pools:
    description: A list of node pools.
    type: object
    required:
    - items
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/node_pool'
  node_volume:
    type: object
    required:
    - volume_id
    - volume_path
    properties:
      volume_id:
        description: The volume internal ID.
        type: string
      volume_path:
        description: The full path to the volume including all the parents.
        type: string
  nodes:
    description: A list of worker nodes.
    type: object
    required:
    - items
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/node'
  quality_set:
    description: A set of required qualities. The object maps quality identifiers
      to values. For qualities defined with no values, the value must be 1. See the
      qualities endpoint in the Data Center API for a list of qualities.
    type: object
    additionalProperties:
      type: integer
  quantity_set:
    description: A set of quantities. The object maps quantity identifiers to values.
      See the quantities endpoint in the Data Center API for a list of quantities.
    type: object
    additionalProperties:
      type: integer
      format: int64
  target_node:
    type: object
    required:
    - id
    - ip
    - up
    properties:
      id:
        description: A system-defined unique ID of the target node.
        type: string
      ip:
        description: IP of the target node
        type: string
        format: ipv4
      up:
        description: True if the target node is up, false if it is down.
        type: boolean
      checked_at:
        description: Last time load balancer target has changed state. Omitted if
          unknown.
        type: string
        format: date-time
  token:
    type: object
    required:
    - spec
    - status
    properties:
      spec:
        $ref: '#/definitions/token_spec'
      status:
        $ref: '#/definitions/token_status'
    example:
      spec:
        display_name: Token 1
        groups:
        - admins
        - operators
        member_id: ysyighpz9buqsgi1xjgsjpazqc
        member_path: /orgs/test-org/members/@ysyighpz9buqsgi1xjgsjpazqc
        name: token1
      status:
        cluster_id: hhbmufz5u41yokquakwbq3cbxr
        created_at: "2020-12-27T13:16:10.707Z"
        id: xxkymdd794f1me917t3aqa86iy
        org_id: di86ihycue5875pb7d5ybfhn9r
        path: /orgs/test-org/projects/test-project/clusters/test-cluster/tokens/token1
        project_id: g3ker86kt6mir8rbczwkyjotpe
  token_create:
    type: object
    required:
    - name
    properties:
      name:
        description: The human-readable name of this token.
        type: string
        minLength: 1
        maxLength: 63
        pattern: ^[a-z]([-a-z0-9]*[a-z0-9])?$
      display_name:
        description: The display name of this token.
        type: string
        maxLength: 512
      member_id:
        description: The unique identifier of the Ridge member assigned to this token.
          The member ID will be used as the Kubernetes username. Either member_id
          or member_path must be specified; if both are present, they must agree.
        type: string
      member_path:
        description: The full path to the Ridge member assigned to this token. The
          member ID will be used as the Kubernetes username. Either member_id or member_path
          must be specified; if both are present, they must agree.
        type: string
      groups:
        description: List of groups token is a member of. system:authenticated group
          is applied to all the tokens automatically.
        type: array
        items:
          description: A group token is added to.
          type: string
    example:
      display_name: Token 1
      groups:
      - admins
      - operators
      member_id: t1fdw9f44d9jj99psnt3bgyh7w
      name: token1
  token_created:
    type: object
    required:
    - spec
    - status
    properties:
      spec:
        $ref: '#/definitions/token_spec'
      status:
        $ref: '#/definitions/token_status_created'
    example:
      spec:
        display_name: Token 1
        groups:
        - admins
        - operators
        member_id: t1fdw9f44d9jj99psnt3bgyh7w
        member_path: /orgs/test-org/members/my-bot
        name: token1
      status:
        cluster_id: rozyaxyphmbiw5tbgq4sonooje
        created_at: "2020-12-16T15:00:19.052Z"
        id: kec9q64bu4813awu8x9p5ihr3r
        kubeconfig: '{"apiVersion":"v1","clusters":[{"cluster":{"certificate-authority-data":"LS0tLS1CRUdJTiBDRVJ...","server":"https://master.doatqj59rqh6xdkf1s1yy37rdh.public.sat.rdgto.com:6443"},"name":"test-org_test_test-cluster"}],"contexts":[{"context":{"cluster":"test-org_test_test-cluster","user":"token1"},"name":"test-org_test_test-cluster"}],"current-context":"test-org_test_test-cluster","kind":"Config","preferences":{},"users":[{"name":"token1","user":{"token":"36QSkC0ONemFigEQ3mcRlQ"}}]}'
        org_id: di86ihycue5875pb7d5ybfhn9r
        path: /orgs/test-org/projects/test-project/clusters/test-cluster/tokens/token1
        project_id: fmgiyiqtajxoj59i4hgaubt4tc
        token: 36QSkC0ONemFigEQ3mcRlQ
  token_spec:
    type: object
    required:
    - name
    - member_id
    - member_path
    - groups
    properties:
      name:
        description: The human-readable name of this token.
        type: string
        minLength: 1
        maxLength: 63
        pattern: ^[a-z]([-a-z0-9]*[a-z0-9])?$
      display_name:
        description: The display name of this token.
        type: string
        maxLength: 512
      member_id:
        description: The unique identifier of the Ridge member assigned to this token.
          The member ID is be used as the Kubernetes username.
        type: string
      member_path:
        description: The full path to the Ridge member assigned to this token.
        type: string
      groups:
        description: List of groups token is a member of.
        type: array
        items:
          description: A group token is added to.
          type: string
  token_status:
    type: object
    required:
    - id
    - path
    - org_id
    - project_id
    - cluster_id
    - created_at
    properties:
      id:
        description: A system-defined unique ID of the token.
        type: string
      path:
        description: The path to the resource that includes all the parents.
        type: string
      org_id:
        description: The unique identifier of the organization.
        type: string
      project_id:
        description: The unique identifier of the project.
        type: string
      cluster_id:
        description: The unique identifier of the cluster.
        type: string
      created_at:
        description: The time at which this token was created.
        type: string
        format: date-time
  token_status_created:
    allOf:
    - $ref: '#/definitions/token_status'
    - type: object
      required:
      - token
      - kubeconfig
      properties:
        token:
          description: The authentication token.
          type: string
        kubeconfig:
          description: Kubeconfig file for the cluster and token.
          type: string
  token_update:
    type: object
    properties:
      name:
        description: The human-readable name of this token.
        type: string
        minLength: 1
        maxLength: 63
        pattern: ^[a-z]([-a-z0-9]*[a-z0-9])?$
      display_name:
        description: The display name of this token.
        type: string
        maxLength: 512
      groups:
        description: List of groups token is a member of. system:authenticated group
          is applied to all the tokens automatically.
        type: array
        items:
          description: A group token is added to.
          type: string
    example:
      display_name: Token 1
      groups:
      - admins
      - operators
      name: token1
  tokens:
    description: A list of tokens.
    type: object
    required:
    - items
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/token'
  versions:
    description: A list of Kubernetes versions.
    type: object
    required:
    - items
    properties:
      items:
        type: array
        items:
          type: string
    example:
      items:
      - v1.18.3
      - v1.17.6
  volume:
    type: object
    required:
    - id
    - path
    - org_id
    - project_id
    - cluster_id
    - size
    - pvc_id
    - created_at
    - phase
    - attachment_state
    properties:
      id:
        description: A system-defined unique ID of the volume.
        type: string
      path:
        description: The path to the resource that includes all the parents.
        type: string
      org_id:
        description: The unique identifier of the organization.
        type: string
      project_id:
        description: The unique identifier of the project.
        type: string
      cluster_id:
        description: The unique identifier of the cluster.
        type: string
      size:
        description: The size of the volume in bytes.
        type: integer
        format: int64
        minimum: 0
      pvc_id:
        description: The persistent volume claim that resulted in this volume.
        type: string
      created_at:
        description: The time at which this volume was created.
        type: string
        format: date-time
      phase:
        description: The volume life cycle phase.
        type: string
        enum: [starting, running, updating, terminating, terminated]
      attachment_state:
        description: The volume attachment state.
        type: string
        enum: [attaching, attached, detaching, detached]
      attached_node_id:
        description: The ID of the node that the volume is attached to.
        type: string
      attached_node_path:
        description: The full path of the node that the volume is attached to.
        type: string
      issues:
        $ref: '#/definitions/volume_issues'
    example:
      attached_node_id: rfxoxxsgu7d3mypdyq4cqgafta
      attached_node_path: /orgs/test-org/projects/test/clusters/test-cluster/node-pools/pool1/nodes/@rfxoxxsgu7d3mypdyq4cqgafta
      attachment_state: attached
      cluster_id: fkwsnunegang7ttrocjyax7ghe
      created_at: "2021-05-10T10:49:52.018797376Z"
      id: i7iesakk9imfy7ojsbf9tjgkqr
      org_id: di86ihycue5875pb7d5ybfhn9r
      path: /orgs/test-org/projects/test-project/clusters/test-cluster/volumes/@i7iesakk9imfy7ojsbf9tjgkqr
      phase: running
      project_id: g3ker86kt6mir8rbczwkyjotpe
      pvc_id: pvc-562c6666-d2fa-47d3-82a8-d84cf9d19082
      size: 8589934592
  volume_issues:
    description: Volume issues
    type: object
    properties:
      degraded:
        description: The volume is running in a degraded mode. There might be a delay
          between issuing a command for controlling this volume and a response.
        type: boolean
      out_of_quota:
        description: Indicates the volume is not provisioned due to exceeded quota.
        type: boolean
  volumes:
    description: A list of persistent volumes.
    type: object
    required:
    - items
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/volume'
  vpn:
    allOf:
    - $ref: '#/definitions/vpn_common'
    - type: object
      required:
      - wireguard
      properties:
        wireguard:
          $ref: '#/definitions/vpn_wireguard'
  vpn_common:
    type: object
    required:
    - spec
    - status
    properties:
      spec:
        $ref: '#/definitions/vpn_spec'
      status:
        $ref: '#/definitions/vpn_status'
    example:
      spec:
        local_networks:
        - 10.10.0.0/16
        name: vpn1
      status:
        cluster_id: m71zro17zsp7j5eham317sy84c
        created_at: "2021-12-06T11:41:43.219821673Z"
        endpoint: ridge-vpn.r6r3eo8ehtm3mhr8x8s1djakgc.tctnc.com:51820
        id: r6r3eo8ehtm3mhr8x8s1djakgc
        org_id: r1sycfkxjwigsmi4ctk5xnx7ia
        path: /orgs/test-org/projects/test-proj/clusters/test-cluster/vpns/vpn1
        project_id: amt41iq55oysg4dnqyey3pcxyo
        remote_networks:
        - 172.28.0.0/16
        - 10.96.0.0/12
        state: starting
        updated_at: "2021-12-06T11:43:52.458084144Z"
  vpn_create:
    type: object
    required:
    - name
    - local_networks
    properties:
      name:
        description: The humand-readable name of VPN.
        type: string
        minLength: 1
        maxLength: 63
        pattern: ^[a-z]([-a-z0-9]*[a-z0-9])?$
      display_name:
        description: The display name of VPN.
        type: string
        maxLength: 512
      local_networks:
        description: The list of networks for which the VPN should forward data from
          cluster, in CIDR format (AAA.BBB.CCC.DDD/NN). These networks mustn't overlap
          with the pod network (172.28.0.0/16), the service network (10.96.0.0/12),
          the node network (attached to the cluster), or one of the local networks
          of another VPN of the cluster.
        type: array
        items:
          type: string
        minItems: 1
      wireguard:
        $ref: '#/definitions/vpn_wireguard_create'
    example:
      local_networks:
      - 10.10.0.0/16
      - 10.160.0.0/16
      - 192.168.1.1/32
      - 192.168.1.49/32
      - 10.180.0.0/16
      name: vpn1
      wireguard:
        client_public_key: gLXeHj3FE8Pm5HWA18lSkUo9Exl1JlNRH9RtWPom3HA=
  vpn_created:
    allOf:
    - $ref: '#/definitions/vpn_common'
    - type: object
      required:
      - wireguard
      properties:
        wireguard:
          $ref: '#/definitions/vpn_wireguard_created'
    example:
      spec:
        local_networks:
        - 10.10.0.0/16
        - 10.160.0.0/16
        - 192.168.1.1/32
        - 192.168.1.49/32
        - 10.180.0.0/16
        name: vpn1
      status:
        cluster_id: m71zro17zsp7j5eham317sy84c
        created_at: "2021-12-06T11:41:43.219821673Z"
        endpoint: ridge-vpn.r6r3eo8ehtm3mhr8x8s1djakgc.tctnc.com:51820
        id: r6r3eo8ehtm3mhr8x8s1djakgc
        org_id: r1sycfkxjwigsmi4ctk5xnx7ia
        path: /orgs/test-org/projects/test-proj/clusters/test-cluster/vpns/vpn1
        project_id: amt41iq55oysg4dnqyey3pcxyo
        remote_networks:
        - 172.28.0.0/16
        - 10.96.0.0/12
        state: starting
        updated_at: "2021-12-06T11:41:43.219821673Z"
      wireguard:
        partial_config: |-
          [Interface]
          PrivateKey = <<CLIENT PRIVATE KEY>>
          [Peer]
          PublicKey = gLXeHj3FE8Pm5HWA18lSkUo9Exl1JlNRH9RtWPom3HA=
          Endpoint = ridge-vpn.kube-system..public.alex.box-d.tctnc.com:51820
          AllowedIPs = 172.28.0.0/16,10.96.0.0/12
          PersistentKeepalive = 25
        server_public_key: kdd60CZm6Oilb+cLT+dwhwNwycGjFgVHAyHSD8F4rWA=
  vpn_issues:
    description: VPN issues
    type: object
    properties:
      overlaps_node_network:
        description: Indicates the VPN cannot be created because one of the local
          networks overlaps with it.
        type: boolean
  vpn_spec:
    type: object
    required:
    - name
    - local_networks
    properties:
      name:
        description: The human-readable name of VPN.
        type: string
        minLength: 1
        maxLength: 63
        pattern: ^[a-z]([-a-z0-9]*[a-z0-9])?$
      display_name:
        description: The display name of VPN.
        type: string
        maxLength: 512
      local_networks:
        description: The list of networks for which the VPN should forward data from
          cluster, in CIDR format.
        type: array
        items:
          type: string
  vpn_status:
    type: object
    required:
    - id
    - path
    - created_at
    - updated_at
    - org_id
    - project_id
    - cluster_id
    - phase
    - remote_networks
    - endpoint
    properties:
      id:
        description: A system-defined unique ID of the VPN.
        type: string
      path:
        description: The path to the resource that includes all the parents.
        type: string
      created_at:
        description: The time at which this VPN was created.
        type: string
        format: date-time
      updated_at:
        description: The time at which this VPN was updated.
        type: string
        format: date-time
      org_id:
        description: The unique identifier of the organization.
        type: string
      project_id:
        description: The unique identifier of the project.
        type: string
      cluster_id:
        description: The unique identifier of the cluster.
        type: string
      phase:
        description: The life cycle phase of the VPN server end.
        type: string
        enum: [starting, updating, running, terminating, terminated]
      local_networks:
        description: The list of networks for which the VPN is forwarding data from
          cluster, in CIDR format.
        type: array
        items:
          type: string
      remote_networks:
        description: The list of networks that should be routed to VPN client for
          VPN to work, in CIDR format.
        type: array
        items:
          type: string
      endpoint:
        description: The FQDN of the Wireguard server.
        type: string
      issues:
        $ref: '#/definitions/vpn_issues'
  vpn_update:
    type: object
    properties:
      display_name:
        description: The display name of VPN.
        type: string
        maxLength: 512
      local_networks:
        description: The list of networks for which the VPN should forward data from
          cluster, in CIDR format (AAA.BBB.CCC.DDD/NN). These networks mustn't overlap
          with the pod network (172.28.0.0/16), the service network (10.96.0.0/12),
          the node network (attached to the cluster), or one of the local networks
          of another VPN of the cluster.
        type: array
        items:
          type: string
        minItems: 1
    example:
      local_networks:
      - 10.10.0.0/16
  vpn_wireguard:
    type: object
    required:
    - server_public_key
    - partial_config
    properties:
      server_public_key:
        description: The public key of the server end of Wireguard VPN.
        type: string
      partial_config:
        description: Partial Wireguard config. This config is missing the client's
          private key. The place to put his key is marked as "<<CLIENT PRIVATE KEY>>".
        type: string
    example:
      partial_config: |-
        [Interface]
        PrivateKey = <<CLIENT PRIVATE KEY>>
        [Peer]
        PublicKey = kdd60CZm6Oilb+cLT+dwhwNwycGjFgVHAyHSD8F4rWA=
        Endpoint = ridge-vpn.kube-system..public.alex.box-d.tctnc.com:51820
        AllowedIPs = 172.28.0.0/16,10.96.0.0/12
        PersistentKeepalive = 25
      server_public_key: kdd60CZm6Oilb+cLT+dwhwNwycGjFgVHAyHSD8F4rWA=
  vpn_wireguard_create:
    type: object
    properties:
      client_public_key:
        description: The public key of a client end of Wireguard VPN. If not supplied,
          a public/private key pair is generated and private key is returned.
        type: string
  vpn_wireguard_created:
    type: object
    required:
    - server_public_key
    properties:
      client_private_key:
        description: The private key of a client end of Wireguard VPN. This key is
          returned only once, and only if the client public key wasn't supplied.
        type: string
      server_public_key:
        description: The public key of the server end of Wireguard VPN.
        type: string
      config:
        description: Wireguard config, returned if client public key wasn't supplied.
          This config is returned only once, subsequent requests that return this
          VPN will return a partial config, without client private key.
        type: string
      partial_config:
        description: Partial Wireguard config, returned if client public key was supplied.
          This config is missing the client's private key. The place to put his key
          is marked as "<<CLIENT PRIVATE KEY>>".
        type: string
  vpns:
    description: A list of VPNs
    type: object
    required:
    - items
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/vpn_common'
tags:
- name: Clusters
  description: Operations on Kubernetes clusters
- name: Node Pools
  description: Operations on node pools
- name: Access Tokens
  description: Operations on tokens that enable access to Kubernetes clusters
- name: Kubernetes Versions
  description: The Kubernetes software versions
- name: Nodes
  description: Operations on worker nodes of a Kubernetes cluster
- name: Load Balancers
  description: The load balancers that serve Kubernetes services
- name: Volumes
  description: The persistent volumes of a Kubernetes cluster
